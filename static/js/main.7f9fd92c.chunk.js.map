{"version":3,"sources":["helpers/colors.ts","helpers/clipboard.tsx","globalContext/index.tsx","globalStyles.ts","components/scrollableContainer/styles.ts","components/scrollableContainer/index.tsx","components/modalInputRow/index.tsx","components/modal/styles.ts","components/modal/index.tsx","components/overflowHiddenContainer/styles.tsx","components/overflowHiddenContainer/index.tsx","components/itemsList/styles.ts","components/itemsList/index.tsx","components/overflowContainer/styles.tsx","components/overflowContainer/index.tsx","components/pageFlexContainer/styles.ts","components/pageFlexContainer/index.tsx","containers/pageInput/styles.ts","containers/pageInput/index.tsx","components/mainViewItemsList/styles.tsx","assets/icons/settings.svg","components/mainViewItemsList/index.tsx","containers/mainView/styles.ts","containers/mainView/index.tsx","components/pageOutputInternalContainer/styles.ts","components/pageOutputInternalContainer/index.tsx","components/PageOutputHTML/styles.ts","components/PageOutputHTML/index.tsx","components/pageOutputCSS/styles.ts","components/pageOutputCSS/index.tsx","containers/pageOutput/styles.ts","containers/pageOutput/index.tsx","components/pageMainContainer/styles.ts","components/pageMainContainer/index.tsx","App.tsx","index.tsx"],"names":["bgColors","assignColor","arrLength","testArray","keys","map","v","resultArray","i","length","push","openTag","item","tagName","classList","closeTag","clipboardItem","childrens","defaultObj","id","open","middle","close","nestedLevel","result","reformatString","defaultString","spaceBeforeTag","Array","fill","join","res","el","resultString","defaultLayoutObject","bgColor","styles","defaultState","isLoading","modalContent","isModalOpen","copyTextState","html","css","layoutItemsList","handleContainerAddition","handleItemAddition","handleItemStyleAddition","handleInputChange","handleModalOpen","handleModalClose","handleStylePropertyChange","checkIfStylesHaveEmptyField","copyHtmlToClipboard","generateRandomId","randomString","String","fromCharCode","Math","floor","random","Date","now","GlobalContext","React","createContext","reactiveStateProxy","component","Proxy","set","obj","prop","value","setState","context","GlobalProvider","props","state","newLayoutItem","modifyLayoutItemsState","stateCopy","newItem","elem","copyWithForceUpdate","array","property","copy","joinReformattedArray","then","forceUpdate","window","setTimeout","copyCssToClipboard","emptyStyleObject","filter","style","field","getCurrentItem","elementIndex","removeElement","splice","resetStateToDefault","arr","itemId","reduce","secondArray","callback","callbackWithStateCopy","JSON","parse","stringify","this","Provider","children","Component","GlobalStyle","createGlobalStyle","ScrollableWrapper","styled","div","maxWidth","display","offset","Scrollable","ModalInputRow","styleProps","useContext","useState","defaultStyles","styleProperty","setStyleProp","styleValue","setStyleValue","inputChanged","setInputChanged","useEffect","getElementIndex","findIndex","s","objectToSubmit","inputHaveChanged","newValue","type","onChange","e","target","className","onClick","disabled","ModalWrapper","modalState","ModalBackground","ModalContent","ModalContentHeader","bg","ModalContentBody","ModalContentBodyTitle","CloseButton","ModalContentStylesList","ModalContentBodyRow","ModalContentBodyStyleAddition","Modal","OverflowHiddenWrapper","OverflowHiddenContainer","LayoutItemsContainer","ItemListContainer","nested","ItemInfo","InputWrapper","Input","input","Button","button","ItemsList","items","itemToAdd","renderItemsList","placeholder","OverflowWrapperContainer","padding","background","OverflowContainer","PageFlexContainerWrapper","PageFlexContainer","HeaderWrapper","ButtonContainerAddition","PageInputContainer","MainViewItemContainer","MainViewItemHeaderContainer","MainViewItemMainContainer","MainViewItemsList","src","SettingsIcon","alt","MainViewScrollWrapper","MainViewContainer","PageOutputInternalContainer","PageOutputInternalWrapper","name","text","PageOutputHTMLWrapper","PageOutputHTML","itemRow","PageOutputCSSWrapper","ClassNameRow","StylePropertyRow","classNames","split","PageOutputScrollContainer","PageOutputContainer","textState","setTextState","PageMainWrapper","PageMainContainer","App","width","height","defaultSize","minSize","size","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f9fd92c.chunk.js","sourcesContent":["export const bgColors: string[] = [\r\n  '#304ffe',\r\n  '#2962ff',\r\n  '#0091ea',\r\n  '#00b8d4',\r\n  '#00bfa5',\r\n  '#00c853',\r\n  '#64dd17',\r\n  '#aeea00',\r\n  '#ffd600',\r\n  '#ffab00',\r\n  '#ff6d00',\r\n  '#dd2c00',\r\n];\r\n\r\nexport const assignColor = (arrLength: number): string => {\r\n  const testArray: number[] = [...bgColors.keys()].map(v => v + 1);\r\n  let resultArray: number[] = [];\r\n  for (let i = 0; i <= arrLength; i++) {\r\n    if (resultArray.length >= bgColors.length) {\r\n      resultArray = [];\r\n    }\r\n    resultArray.push(testArray[i % testArray.length]);\r\n  }\r\n  return bgColors[resultArray.length - 1];\r\n};\r\n","import { defaultObjInterface, LayoutItemsList } from \"interfaces\";\r\n\r\nexport const openTag = (item: LayoutItemsList): string => `<${item.tagName}${item.classList.length > 0 ? ` class=\"${item.classList}\"` : \"\"}>`;\r\nexport const closeTag = (item: LayoutItemsList): string => `</${item.tagName}>`;\r\n\r\nexport const clipboardItem = (item: LayoutItemsList, childrens: LayoutItemsList[] = []): defaultObjInterface => {\r\n  const defaultObj: defaultObjInterface = {\r\n    id: item.id,\r\n    open: openTag(item),\r\n    middle: childrens,\r\n    close: closeTag(item),\r\n    nestedLevel: item.nestedLevel\r\n  };\r\n  if (childrens.length > 0) {\r\n    const result: defaultObjInterface[] = [];\r\n    childrens.map((item: any) => {\r\n      return result.push(clipboardItem(item, item.childrens));\r\n    });\r\n    return {...defaultObj, middle: [...result]};\r\n  }\r\n  return defaultObj;\r\n};\r\n\r\nexport const reformatString = ((item: defaultObjInterface, middle: defaultObjInterface[] | LayoutItemsList[] = []): string => {\r\n  const defaultString: string = `${item.open}${item.close}\\n`;\r\n  const spaceBeforeTag: (nestedLevel: number) => string = (nestedLevel: number) => Array(nestedLevel * 2).fill(\"\\xa0\").join(\"\");\r\n\r\n  if (middle.length > 0) {\r\n    let nestedLevel = 0;\r\n    const res: string[] = [];\r\n    item.middle.map((el: any) => {\r\n      nestedLevel = el.nestedLevel;\r\n      return res.push(reformatString(el, el.middle));\r\n    });\r\n\r\n    const resultString = res.map((el) => {\r\n      if (nestedLevel > 0) {\r\n        return spaceBeforeTag(nestedLevel) + el;\r\n      }\r\n      return el;\r\n    });\r\n\r\n    if (item.nestedLevel > 0) {\r\n      return `${item.open}\\n${resultString.join(\"\")}${spaceBeforeTag(item.nestedLevel)}${item.close}\\n`;\r\n    }\r\n    return `${item.open}\\n${resultString.join(\"\")}${item.close}\\n`;\r\n  }\r\n\r\n  return defaultString;\r\n});\r\n\r\nexport const joinReformattedArray = (array: string[]) => {\r\n  return array.join();\r\n};\r\n","/* eslint-disable react/no-direct-mutation-state */\r\nimport React from \"react\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nimport { defaultObjInterface, LayoutInputRow, LayoutItemsList } from \"interfaces\";\r\nimport { assignColor } from \"helpers/colors\";\r\nimport { clipboardItem, joinReformattedArray, reformatString } from \"../helpers/clipboard\";\r\n\r\nexport const defaultLayoutObject: LayoutItemsList = {\r\n  id: \"\",\r\n  tagName: \"div\",\r\n  classList: \"\",\r\n  nestedLevel: 0,\r\n  bgColor: \"\",\r\n  styles: [],\r\n  childrens: [],\r\n};\r\n\r\ninterface value {\r\n  isLoading: boolean;\r\n  isModalOpen: boolean;\r\n  copyTextState: {\r\n    html: string;\r\n    css: string;\r\n  };\r\n  modalContent: LayoutItemsList;\r\n  layoutItemsList: LayoutItemsList[];\r\n  handleContainerAddition: () => void;\r\n  handleModalOpen: (item: LayoutItemsList) => void;\r\n  handleModalClose: () => void;\r\n  handleItemAddition: (item: LayoutItemsList, newItem: LayoutItemsList) => void;\r\n  handleInputChange: (item: LayoutItemsList, field: string, value: string) => void;\r\n  handleStylePropertyChange: (item: LayoutItemsList, elementIndex: number, removeElement: boolean, style: LayoutInputRow) => void;\r\n  handleItemStyleAddition: (item: LayoutItemsList) => void;\r\n  checkIfStylesHaveEmptyField: () => boolean;\r\n  copyHtmlToClipboard: () => void;\r\n}\r\n\r\nconst defaultState = {\r\n  isLoading: false,\r\n  modalContent: defaultLayoutObject,\r\n  isModalOpen: false,\r\n  copyTextState: {\r\n    html: 'Copy',\r\n    css: 'Copy',\r\n  },\r\n  layoutItemsList: [defaultLayoutObject],\r\n  handleContainerAddition: () => {},\r\n  handleItemAddition: () => {},\r\n  handleItemStyleAddition: () => {},\r\n  handleInputChange: () => {},\r\n  handleModalOpen: () => {},\r\n  handleModalClose: () => {},\r\n  handleStylePropertyChange: () => {},\r\n  checkIfStylesHaveEmptyField: () => true,\r\n  copyHtmlToClipboard: () => {}\r\n};\r\n\r\nexport const generateRandomId = (): string => {\r\n  const randomString = () => String.fromCharCode(65 + Math.floor(Math.random() * 26));\r\n  return randomString() + Date.now() + randomString();\r\n};\r\n\r\nconst GlobalContext = React.createContext<value>(defaultState);\r\n\r\nconst reactiveStateProxy = (component: any) =>\r\n  new Proxy(defaultState, {\r\n    set(obj: any, prop: any, value) {\r\n      obj[prop] = value;\r\n      component.setState({context: reactiveStateProxy(component)});\r\n      return true;\r\n    },\r\n  });\r\n\r\nclass GlobalProvider extends React.Component {\r\n  state = {\r\n    context: reactiveStateProxy(this),\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetStateToDefault();\r\n    this.state.context.layoutItemsList = [\r\n      {\r\n        id: generateRandomId(),\r\n        tagName: \"div\",\r\n        classList: \"container\",\r\n        bgColor: assignColor(0),\r\n        styles: [\r\n          {property: \"width\", value: 100 + \"%\"},\r\n          {property: \"border\", value: \"2px solid red\"},\r\n        ],\r\n        nestedLevel: 0,\r\n        childrens: [],\r\n      },\r\n    ];\r\n  };\r\n\r\n  public handleContainerAddition = (): void => {\r\n    const newLayoutItem = {...defaultLayoutObject, id: generateRandomId()};\r\n    newLayoutItem.bgColor = assignColor(this.state.context.layoutItemsList.length);\r\n    this.modifyLayoutItemsState(\r\n      newLayoutItem,\r\n      (stateCopy: LayoutItemsList[]) => {\r\n        stateCopy.push(newLayoutItem);\r\n      },\r\n      true\r\n    );\r\n  };\r\n\r\n  public handleItemAddition = (item: LayoutItemsList, newItem: LayoutItemsList): void => {\r\n    this.modifyLayoutItemsState(item, (elem: LayoutItemsList) => {\r\n      elem?.childrens.push(newItem);\r\n    });\r\n  };\r\n\r\n  private copyWithForceUpdate = (array: string[], property: string): void => {\r\n    copy(joinReformattedArray(array)).then(() => {\r\n      this.state.context.copyTextState[property] = 'Copied!';\r\n      this.forceUpdate();\r\n      window.setTimeout(() => {\r\n        this.state.context.copyTextState[property] = 'Copy!';\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  public copyHtmlToClipboard = (): void => {\r\n    const resultArray: defaultObjInterface[] = [];\r\n    this.state.context.layoutItemsList.map((item: LayoutItemsList) => {\r\n      if (item.childrens.length > 0) {\r\n        return resultArray.push(clipboardItem(item, item.childrens));\r\n      }\r\n      return resultArray.push(clipboardItem(item));\r\n    });\r\n\r\n    const resultString = resultArray.map((item: defaultObjInterface): string => {\r\n      if (item.middle.length > 0) {\r\n        return reformatString(item, item.middle);\r\n      }\r\n      return reformatString(item);\r\n    });\r\n\r\n    this.copyWithForceUpdate(resultString, 'html');\r\n  };\r\n\r\n  public copyCssToClipboard = (): void => {\r\n\r\n    this.copyWithForceUpdate(['resultString'], 'css');\r\n  };\r\n\r\n  public handleItemStyleAddition = (item: LayoutItemsList): void => {\r\n    const emptyStyleObject = {\r\n      property: \"\",\r\n      value: \"\"\r\n    };\r\n\r\n    this.modifyLayoutItemsState(item, (elem: LayoutItemsList): void => {\r\n      this.state.context.modalContent.styles.push(emptyStyleObject);\r\n      elem.styles.push(emptyStyleObject);\r\n    });\r\n  };\r\n\r\n  public checkIfStylesHaveEmptyField = (): boolean => {\r\n    if (this.state.context.modalContent.styles) {\r\n      return this.state.context.modalContent.styles.filter((style: LayoutInputRow) => {\r\n        return style.property.length === 0 && (typeof style.value !== \"number\" ? style.value.length === 0 : style.value > 0);\r\n      }).length > 0;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  public handleInputChange = (item: LayoutItemsList, field: string, value: string): void => {\r\n    this.modifyLayoutItemsState(item, (elem: any) => {\r\n      elem[field] = value;\r\n    });\r\n  };\r\n\r\n  public handleModalOpen = (item: LayoutItemsList): void => {\r\n    if (!this.state.context.isModalOpen) {\r\n      this.state.context.isModalOpen = true;\r\n    }\r\n    this.state.context.modalContent = this.getCurrentItem(this.state.context.layoutItemsList, item.id);\r\n  };\r\n\r\n  public handleModalClose = (): void => {\r\n    this.state.context.isModalOpen = false;\r\n    this.state.context.modalContent = defaultLayoutObject;\r\n  };\r\n\r\n  public handleStylePropertyChange = (item: LayoutItemsList, elementIndex: number, removeElement: boolean = false, style?: LayoutInputRow) => {\r\n    this.modifyLayoutItemsState(item, (elem: any): void => {\r\n      if (!removeElement) {\r\n        this.state.context.modalContent.styles[elementIndex] = {...style};\r\n        elem.styles[elementIndex] = {...style};\r\n      } else {\r\n        this.state.context.modalContent.styles.splice(elementIndex, 1);\r\n        elem.styles.splice(elementIndex, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const {isLoading, layoutItemsList, isModalOpen, modalContent, copyTextState} = this.state.context;\r\n    const value: value = {\r\n      isLoading,\r\n      isModalOpen,\r\n      layoutItemsList,\r\n      modalContent,\r\n      copyTextState,\r\n      handleModalOpen: this.handleModalOpen,\r\n      handleModalClose: this.handleModalClose,\r\n      handleItemAddition: this.handleItemAddition,\r\n      handleInputChange: this.handleInputChange,\r\n      handleContainerAddition: this.handleContainerAddition,\r\n      handleStylePropertyChange: this.handleStylePropertyChange,\r\n      handleItemStyleAddition: this.handleItemStyleAddition,\r\n      checkIfStylesHaveEmptyField: this.checkIfStylesHaveEmptyField,\r\n      copyHtmlToClipboard: this.copyHtmlToClipboard,\r\n    };\r\n    return <GlobalContext.Provider value={value}>{this.props.children}</GlobalContext.Provider>;\r\n  }\r\n\r\n  private resetStateToDefault = () => {\r\n    this.state.context.isLoading = false;\r\n    this.state.context.isModalOpen = false;\r\n    this.state.context.modalContent = {};\r\n  };\r\n\r\n  private getCurrentItem = (arr: LayoutItemsList[], itemId: string): LayoutItemsList | null => {\r\n    return arr.reduce((secondArray: LayoutItemsList | null, item: LayoutItemsList): LayoutItemsList | null => {\r\n      if (secondArray) {\r\n        return secondArray;\r\n      }\r\n      if (item.id === itemId) {\r\n        return item;\r\n      }\r\n      if (item[\"childrens\"]) {\r\n        return this.getCurrentItem(item[\"childrens\"], itemId);\r\n      }\r\n      return null;\r\n    }, null);\r\n  };\r\n\r\n  private modifyLayoutItemsState = (item: LayoutItemsList, callback: Function, callbackWithStateCopy = false): void => {\r\n    const stateCopy = JSON.parse(JSON.stringify(this.state.context.layoutItemsList));\r\n    const elem: LayoutItemsList | null = this.getCurrentItem(stateCopy, item.id);\r\n    if (callbackWithStateCopy) {\r\n      callback(stateCopy);\r\n    } else {\r\n      callback(elem);\r\n    }\r\n    this.state.context.layoutItemsList = stateCopy;\r\n  };\r\n}\r\n\r\nexport { GlobalContext, GlobalProvider };\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    outline: none !important;\r\n  }\r\n  \r\n  *:not(input) {\r\n    caret-color: transparent;\r\n  }\r\n\r\n  input:-internal-autofill-selected {\r\n    background-color: #fff !important;\r\n  }\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    color: #fff;\r\n    \r\n    &[type=\"text\"] {\r\n      caret-color: auto;\r\n    }\r\n  }\r\n\r\n  .flex-wrapper {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n\r\n  .main-class-list {\r\n    margin-left: 15px;\r\n    padding-left: 15px;\r\n    border-left: 1px solid #fff;\r\n    display: flex;\r\n  }\r\n  \r\n  .button {\r\n    background-color: #304ffe;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: #fff;\r\n    padding: 5px 8px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n    transition: background-color 0.2s linear;\r\n    \r\n    &.no-offset {\r\n      margin-left: 0;\r\n    }\r\n    \r\n    &.double-padding {\r\n      padding: 10px 16px;\r\n    }\r\n    \r\n    &.success {\r\n      background-color: #28a745;\r\n    }\r\n    \r\n    &.danger {\r\n      background-color: #dc3545;\r\n    }\r\n    \r\n    &.disabled {\r\n      background-color: #f8f9fa;\r\n      cursor: not-allowed;\r\n      color: #d3d3d3;\r\n    }\r\n  }\r\n  \r\n  .relative {\r\n    position: relative;\r\n  }\r\n  \r\n  .hide-button {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 15px;\r\n    padding: 3px 5px;\r\n    color: #000;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    \r\n    &.right {\r\n      left: unset;\r\n      right: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface ScrollableWrapperInterface extends React.HTMLAttributes<HTMLDivElement> {\r\n  maxWidth?: string;\r\n  display?: string;\r\n  offset?: number;\r\n}\r\n\r\nexport const ScrollableWrapper = styled.div<ScrollableWrapperInterface>`\r\n  width: ${props => props.maxWidth || '100%'};\r\n  max-width: ${props => props.maxWidth || '250px'};\r\n  display: ${props => props.display || 'inline-block'};\r\n  margin-left: ${props => props.offset || 0}px;\r\n  white-space: nowrap;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  -webkit-overflow-scrolling: touch;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  \r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { ReactElement } from \"react\";\r\n\r\nimport { ScrollableWrapper, ScrollableWrapperInterface } from \"./styles\";\r\n\r\nconst Scrollable: React.FC<ScrollableWrapperInterface> = ({maxWidth, offset, children, ...props}): ReactElement => {\r\n  return (\r\n    <ScrollableWrapper maxWidth={maxWidth} offset={offset} {...props}>\r\n      {children}\r\n    </ScrollableWrapper>\r\n  );\r\n};\r\n\r\nexport default Scrollable;\r\n","import React, { Fragment, ReactElement, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { GlobalContext } from \"globalContext\";\r\nimport { LayoutInputRow } from \"interfaces\";\r\n\r\nconst ModalInputRow: React.FC<{ styleProps: LayoutInputRow }> = ({styleProps, ...props}): ReactElement => {\r\n  const {modalContent, handleStylePropertyChange} = useContext(GlobalContext);\r\n\r\n  const [defaultStyles] = useState(styleProps);\r\n  const [styleProperty, setStyleProp] = useState<string>(\"\");\r\n  const [styleValue, setStyleValue] = useState<string | number>(\"\");\r\n  const [inputChanged, setInputChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setStyleProp(styleProps.property);\r\n    setStyleValue(styleProps.value);\r\n  }, [styleProps]);\r\n\r\n  const getElementIndex = (): number => {\r\n    return modalContent.styles.findIndex((s: any) => s.property === styleProps.property && s.value === styleProps.value);\r\n  };\r\n\r\n  const objectToSubmit = (): {property: string, value: string | number} => {\r\n    return {property: styleProperty, value: styleValue};\r\n  };\r\n\r\n  const saveStyleToGlobalState = (): void => {\r\n    handleStylePropertyChange(modalContent, getElementIndex(), false, objectToSubmit());\r\n    setInputChanged(false);\r\n  };\r\n\r\n  const inputHaveChanged = (property: string, newValue: string) : void => {\r\n    setInputChanged(true);\r\n    if (property === \"property\") {\r\n      setStyleProp(newValue);\r\n    }\r\n    if (property === \"value\") {\r\n      setStyleValue(newValue);\r\n    }\r\n  };\r\n\r\n  const cancelInputChange = (): void => {\r\n    setStyleProp(defaultStyles.property);\r\n    setStyleValue(defaultStyles.value);\r\n    setInputChanged(false);\r\n  };\r\n\r\n  const removeStyle = (): void => {\r\n    return handleStylePropertyChange(modalContent, getElementIndex(), true, objectToSubmit());\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <input type=\"text\" value={styleProperty} onChange={(e) => inputHaveChanged(\"property\", e.target.value)}/>\r\n      <input type=\"text\" value={styleValue} onChange={(e) => inputHaveChanged(\"value\", e.target.value)}/>\r\n      <button className={`button success ${!inputChanged && \"disabled\"}`} onClick={saveStyleToGlobalState}\r\n              disabled={!inputChanged}>Save\r\n      </button>\r\n      <button className={`button ${!inputChanged && \"disabled\"}`} onClick={cancelInputChange}\r\n              disabled={!inputChanged}>Cancel\r\n      </button>\r\n      <button className={`button danger ${inputChanged && \"disabled\"}`} onClick={removeStyle}\r\n              disabled={inputChanged}>Delete\r\n      </button>\r\n    </Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default ModalInputRow;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ModalState {\r\n  modalState: boolean;\r\n}\r\n\r\nexport interface ModalContentHeaderInterface {\r\n  bg: string;\r\n}\r\n\r\nexport const ModalWrapper = styled.div<ModalState>`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 100vw;\r\n  min-height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  display: ${props => props.modalState ? 'block' : 'none'};\r\n`;\r\n\r\nexport const ModalBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  z-index: 1001;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  z-index: 1002;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const ModalContentHeader = styled.div<ModalContentHeaderInterface>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: 15px;\r\n  border-top-left-radius: 15px;\r\n  border-top-right-radius: 15px;\r\n  background-color: ${props => props.bg || '#1d1d1d'};\r\n  color: #fff;\r\n`;\r\n\r\nexport const ModalContentBody = styled.div`\r\n  border-bottom-left-radius: 15px;\r\n  border-bottom-right-radius: 15px;\r\n  background-color: #fff;\r\n  padding: 15px;\r\n`;\r\n\r\nexport const ModalContentBodyTitle = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin: 0 5px 10px 5px;\r\n  color: #d7ba7d;\r\n  font-size: 16px;\r\n\r\n  & > div:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  div {\r\n    width: 240px;\r\n    text-align: center;\r\n    \r\n    \r\n  }\r\n`;\r\n\r\nexport const CloseButton = styled.div`\r\n  margin-left: 10px;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: transparent;\r\n  border: none;\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    width: 18px;\r\n    height: 2px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    background-color: #fff;\r\n    border-radius: 30px;\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    width: 18px;\r\n    height: 2px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    background-color: #fff;\r\n    border-radius: 30px;\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\nexport const ModalContentStylesList = styled.div`\r\n  max-height: 75vh;\r\n  overflow-y: auto;\r\n  padding-right: 15px;\r\n`;\r\n\r\nexport const ModalContentBodyRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  \r\n  input {\r\n    color: #000;\r\n    border: 1px solid #ccc;\r\n    margin: 5px;\r\n    padding: 5px;\r\n    width: 240px;\r\n  }\r\n`;\r\n\r\nexport const ModalContentBodyStyleAddition = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n\r\n`;\r\n\r\n","import React, { ReactElement, useContext } from \"react\";\r\n\r\nimport { generateRandomId, GlobalContext } from \"globalContext\";\r\nimport Scrollable from \"components/scrollableContainer\";\r\nimport ModalInputRow from \"components/modalInputRow\";\r\n\r\nimport {\r\n  CloseButton,\r\n  ModalBackground,\r\n  ModalContent,\r\n  ModalContentBody,\r\n  ModalContentBodyRow,\r\n  ModalContentBodyStyleAddition,\r\n  ModalContentBodyTitle,\r\n  ModalContentHeader,\r\n  ModalContentStylesList,\r\n  ModalWrapper\r\n} from \"./styles\";\r\nimport { LayoutInputRow } from \"../../interfaces\";\r\n\r\nconst Modal: React.FC = (): ReactElement => {\r\n  const {\r\n    isModalOpen,\r\n    modalContent,\r\n    handleItemStyleAddition,\r\n    handleModalClose,\r\n    checkIfStylesHaveEmptyField\r\n  } = useContext(GlobalContext);\r\n\r\n  const addStyleProperty: () => void = (): void => {\r\n    return handleItemStyleAddition(modalContent);\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper modalState={isModalOpen}>\r\n      <ModalBackground onClick={() => handleModalClose()}/>\r\n      <ModalContent>\r\n        <ModalContentHeader bg={modalContent.bgColor}>\r\n          <div className=\"flex-wrapper\">\r\n            <div className=\"main-tag-names\">{modalContent.tagName}</div>\r\n            <div className=\"main-class-list\">\r\n              {modalContent.classList && modalContent.classList.length > 0 && \"class:\"} {<Scrollable\r\n              offset={5}>{modalContent.classList}</Scrollable>}\r\n            </div>\r\n          </div>\r\n          <CloseButton onClick={() => handleModalClose()}/>\r\n        </ModalContentHeader>\r\n        <ModalContentBody>\r\n          {modalContent.styles && modalContent.styles.length > 0 &&\r\n            <ModalContentBodyTitle>\r\n              <div>Property name</div>\r\n              <div>Value</div>\r\n            </ModalContentBodyTitle>\r\n          }\r\n          <ModalContentStylesList>\r\n            {modalContent.styles && modalContent.styles.length > 0 && (\r\n              modalContent.styles.map((style: LayoutInputRow) => {\r\n                return (\r\n                  <ModalContentBodyRow key={`${generateRandomId()}${style.property}${style.value}`}>\r\n                    {modalContent.styles && modalContent.styles.length > 0 && (\r\n                      <ModalInputRow styleProps={style}/>\r\n                    )}\r\n                  </ModalContentBodyRow>\r\n                );\r\n              })\r\n            )}\r\n          </ModalContentStylesList>\r\n          <ModalContentBodyStyleAddition>\r\n            <button\r\n              type=\"button\"\r\n              className={`${checkIfStylesHaveEmptyField() && \"disabled\"} button success double-padding no-offset`}\r\n              onClick={addStyleProperty}\r\n              disabled={checkIfStylesHaveEmptyField()}>Add property\r\n            </button>\r\n          </ModalContentBodyStyleAddition>\r\n        </ModalContentBody>\r\n      </ModalContent>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const OverflowHiddenWrapper = styled.div`\r\n  width: 100%;\r\n  overflow: hidden;\r\n  flex-grow: 1;\r\n  max-height: 100%;\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { OverflowHiddenWrapper } from './styles';\r\n\r\nconst OverflowHiddenContainer: React.FC = (props): ReactElement => {\r\n  return <OverflowHiddenWrapper>{props.children}</OverflowHiddenWrapper>;\r\n};\r\n\r\nexport default OverflowHiddenContainer;\r\n","import styled from 'styled-components';\r\n\r\ninterface ItemListContainerInterface {\r\n  nested: number;\r\n}\r\n\r\ninterface withBgProps {\r\n  bg: string;\r\n}\r\n\r\nexport const LayoutItemsContainer = styled.div<withBgProps>`\r\n  width: 100%;\r\n  color: #fff;\r\n  padding: 15px;\r\n  min-width: 350px;\r\n  border-bottom: 1px dashed ${props => props.bg};\r\n  color: #fff;\r\n  font-size: 20px;\r\n\r\n  .header-info {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    margin-bottom: 5px;\r\n    padding-left: 15px;\r\n\r\n    input {\r\n      border: none;\r\n      background: none;\r\n      color: #fff;\r\n    }\r\n    .tag-name {\r\n      color: ${props => props.bg};\r\n      margin-right: 15px;\r\n      max-width: 90px;\r\n    }\r\n\r\n    .class-lists {\r\n      color: #d7ba7d;\r\n      flex-grow: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ItemListContainer = styled.div<ItemListContainerInterface>`\r\n  padding-left: ${props => (props.nested === 0 ? 0 : 15)}px;\r\n  width: 100%;\r\n  min-width: 350px;\r\n  position: relative;\r\n`;\r\n\r\nexport const ItemInfo = styled.div`\r\n  border: 2px solid #ccc;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: #fff;\r\n\r\n  .tag-name {\r\n    width: 100px;\r\n    margin-right: 5px;\r\n  }\r\n  .input-classes {\r\n    flex-grow: 1;\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div<withBgProps>`\r\n  position: relative;\r\n  ::before,\r\n  ::after {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    content: '';\r\n    width: 0;\r\n    height: 0;\r\n    background-color: ${props => props.bg};\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  ::before {\r\n    width: 2px;\r\n  }\r\n\r\n  ::after {\r\n    height: 2px;\r\n  }\r\n\r\n  :hover,\r\n  :focus-within {\r\n    ::before {\r\n      height: 100%;\r\n    }\r\n    ::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 28px;\r\n  max-height: 28px;\r\n  border: none;\r\n  border-bottom: 2px solid #ccc;\r\n  padding: 3px 10px;\r\n  font-size: 15px;\r\n  color: #000;\r\n`;\r\n\r\nexport const Button = styled.button<withBgProps>`\r\n  background-color: ${props => props.bg};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  height: 28px;\r\n  max-height: 28px;\r\n  width: 28px;\r\n  max-width: 28px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { Fragment, ReactElement, useContext } from \"react\";\r\nimport { LayoutItemsList } from \"interfaces\";\r\nimport { generateRandomId, GlobalContext } from \"globalContext\";\r\n\r\nimport { Button, Input, InputWrapper, ItemInfo, ItemListContainer, LayoutItemsContainer } from \"./styles\";\r\nimport Scrollable from \"components/scrollableContainer\";\r\nimport { assignColor } from \"helpers/colors\";\r\n\r\nconst ItemsList: React.FC<{ items: LayoutItemsList[] }> = ({items}): ReactElement => {\r\n  const {handleItemAddition, handleInputChange} = useContext(GlobalContext);\r\n  return (\r\n    <Fragment>\r\n      {items.map((item: LayoutItemsList): JSX.Element => {\r\n        const itemToAdd: LayoutItemsList = {\r\n          id: generateRandomId(),\r\n          tagName: \"div\",\r\n          classList: \"\",\r\n          bgColor: assignColor(item.nestedLevel + 1),\r\n          nestedLevel: item.nestedLevel + 1,\r\n          styles: [],\r\n          childrens: [],\r\n        };\r\n\r\n        const renderItemsList: JSX.Element = (\r\n          <ItemListContainer key={item.id} nested={item.nestedLevel}>\r\n            <ItemInfo className=\"item-info\">\r\n              <InputWrapper className=\"tag-name\" bg={item.bgColor}>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Tag name\"\r\n                  value={item.tagName}\r\n                  onChange={e => handleInputChange(item, \"tagName\", e.target.value)}\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper className=\"input-classes\" bg={item.bgColor}>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Class names\"\r\n                  value={item.classList}\r\n                  onChange={e => handleInputChange(item, \"classList\", e.target.value)}\r\n                />\r\n              </InputWrapper>\r\n              <Button type=\"button\" onClick={() => handleItemAddition(item, itemToAdd)} bg={item.bgColor}>\r\n                +\r\n              </Button>\r\n            </ItemInfo>\r\n            {item.childrens && item.childrens.length > 0 && <ItemsList items={item.childrens}/>}\r\n          </ItemListContainer>\r\n        );\r\n\r\n        if (item.nestedLevel === 0) {\r\n          return (\r\n            <LayoutItemsContainer key={item.id} bg={item.bgColor}>\r\n              <div className=\"header-info\">\r\n                <Scrollable className=\"tag-name\">{item.tagName}</Scrollable>\r\n                {item.classList &&\r\n                  <Scrollable className=\"class-lists\" maxWidth={\"initial\"}>{item.classList}</Scrollable>}\r\n              </div>\r\n              {renderItemsList}\r\n            </LayoutItemsContainer>\r\n          );\r\n        }\r\n\r\n        return renderItemsList;\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemsList;\r\n","import styled from 'styled-components';\r\n\r\nexport interface OverflowHiddenContainerInterface {\r\n  padding?: number;\r\n  background?: string;\r\n}\r\n\r\nexport const OverflowWrapperContainer = styled.div<OverflowHiddenContainerInterface>`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  overflow: auto;\r\n  flex-grow: 1;\r\n  padding: ${props => props.padding}px;\r\n  background-color: ${props => props.background};\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { OverflowWrapperContainer, OverflowHiddenContainerInterface } from './styles';\r\n\r\nconst OverflowContainer: React.FC<OverflowHiddenContainerInterface> = ({ padding, background, children }): ReactElement => {\r\n  return (\r\n    <OverflowWrapperContainer padding={padding} background={background}>\r\n      {children}\r\n    </OverflowWrapperContainer>\r\n  );\r\n};\r\n\r\nexport default OverflowContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageFlexContainerWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-height: 100%;\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PageFlexContainerWrapper } from './styles';\r\n\r\nconst PageFlexContainer: React.FC = (props): ReactElement => {\r\n  return <PageFlexContainerWrapper>{props.children}</PageFlexContainerWrapper>;\r\n};\r\n\r\nexport default PageFlexContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  background-color: #1d1d1d;\r\n  padding: 40px 15px 25px 15px;\r\n  color: #fff;\r\n  h1 {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainerAddition = styled.div`\r\n  width: 70%;\r\n  padding: 5px;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  border-bottom: 2px solid #cccccc;\r\n  margin: 20px auto;\r\n  cursor: pointer;\r\n`;\r\n","import React, { ReactElement, useContext } from \"react\";\r\nimport OverflowHiddenWrapper from \"components/overflowHiddenContainer\";\r\nimport ItemsList from \"components/itemsList\";\r\nimport { GlobalContext } from \"globalContext\";\r\nimport OverflowWrapper from \"components/overflowContainer\";\r\nimport PageFlexContainer from \"components/pageFlexContainer\";\r\n\r\nimport { ButtonContainerAddition, HeaderWrapper } from \"./styles\";\r\n\r\nconst PageInputContainer: React.FC = (): ReactElement => {\r\n  const {layoutItemsList, handleContainerAddition} = useContext(GlobalContext);\r\n  return (\r\n    <PageFlexContainer>\r\n      <HeaderWrapper>\r\n        <h1>Easy Layout</h1>\r\n      </HeaderWrapper>\r\n\r\n      <OverflowHiddenWrapper>\r\n        <OverflowWrapper background=\"#1e1e1e\">\r\n          <ItemsList items={layoutItemsList}/>\r\n          <ButtonContainerAddition onClick={handleContainerAddition}>Add Container</ButtonContainerAddition>\r\n        </OverflowWrapper>\r\n      </OverflowHiddenWrapper>\r\n    </PageFlexContainer>\r\n  );\r\n};\r\n\r\nexport default PageInputContainer;\r\n","import styled from 'styled-components';\r\nimport { LayoutItemsList } from 'interfaces';\r\n\r\ninterface MainViewItemMainContainerInterface {\r\n  childrens: LayoutItemsList[];\r\n}\r\n\r\nexport const MainViewItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const MainViewItemHeaderContainer = styled.div<{ bg: string }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 20px;\r\n  padding: 0 10px;\r\n  background-color: ${props => props.bg ? props.bg : '#1e88e5'};\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  color: #fff;\r\n  font-size: 13px;\r\n\r\n  \r\n\r\n  .settings-icon {\r\n    width: 13px;\r\n    height: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainViewItemMainContainer = styled.div<MainViewItemMainContainerInterface>`\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-top: none;\r\n  flex-grow: 1;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  padding: 15px;\r\n  overflow: hidden;\r\n  ${props =>\r\n    props.childrens.length > 0 &&\r\n    `\r\n    display: flex;\r\n  \r\n  `}\r\n\r\n  div:not(:last-child, .main-tag-names) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/settings.ec3a9753.svg\";","import React, { Fragment, ReactElement, useContext } from \"react\";\r\nimport { GlobalContext } from \"globalContext\";\r\nimport { LayoutItemsList } from \"interfaces\";\r\nimport Scrollable from \"components/scrollableContainer\";\r\n\r\n\r\nimport { MainViewItemContainer, MainViewItemHeaderContainer, MainViewItemMainContainer } from \"./styles\";\r\n\r\nimport SettingsIcon from \"assets/icons/settings.svg\";\r\n\r\nconst MainViewItemsList: React.FC<{ items: LayoutItemsList[] }> = ({items}): ReactElement => {\r\n  const {handleModalOpen} = useContext(GlobalContext);\r\n  return (\r\n    <Fragment>\r\n      {items.map((item: LayoutItemsList): JSX.Element => {\r\n        return (\r\n          <MainViewItemContainer key={item.id}>\r\n            <MainViewItemHeaderContainer bg={item.bgColor}>\r\n              <div className=\"flex-wrapper\">\r\n                <div className=\"main-tag-names\">{item.tagName}</div>\r\n                <div className=\"main-class-list\">\r\n                  {item.classList.length > 0 && \"class: \"} {<Scrollable offset={5}>{item.classList}</Scrollable>}\r\n                </div>\r\n              </div>\r\n              {item.classList &&\r\n                <div className=\"settings-icon\" onClick={() => handleModalOpen(item)}>\r\n                  <img src={SettingsIcon} alt=\"Settings\"/>\r\n                </div>\r\n              }\r\n            </MainViewItemHeaderContainer>\r\n            <MainViewItemMainContainer childrens={item.childrens}>\r\n              {item.childrens && item.childrens.length > 0 && <MainViewItemsList items={item.childrens}/>}\r\n            </MainViewItemMainContainer>\r\n          </MainViewItemContainer>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainViewItemsList;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainViewScrollWrapper = styled.div`\r\n  min-width: 500px;\r\n  padding: 15px;\r\n`;\r\n","import React, { ReactElement, useContext } from \"react\";\r\nimport { GlobalContext } from \"globalContext\";\r\nimport PageFlexContainer from \"components/pageFlexContainer\";\r\nimport OverflowHiddenWrapper from \"components/overflowHiddenContainer\";\r\nimport OverflowWrapper from \"components/overflowContainer\";\r\nimport MainViewItemsList from \"components/mainViewItemsList\";\r\n\r\nimport { MainViewScrollWrapper } from \"./styles\";\r\n\r\nconst MainViewContainer: React.FC = (): ReactElement => {\r\n  const {layoutItemsList} = useContext(GlobalContext);\r\n  return (\r\n    <PageFlexContainer>\r\n      <OverflowHiddenWrapper>\r\n        <OverflowWrapper>\r\n          <MainViewScrollWrapper>\r\n            <MainViewItemsList items={layoutItemsList}/>\r\n          </MainViewScrollWrapper>\r\n        </OverflowWrapper>\r\n      </OverflowHiddenWrapper>\r\n    </PageFlexContainer>\r\n  );\r\n};\r\n\r\nexport default MainViewContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport interface PageOutputInternalWrapperInterface {\r\n  name?: string;\r\n  text: string;\r\n}\r\n\r\nexport const PageOutputInternalContainer = styled.div`\r\n  background-color: #151515;\r\n  max-height: 100%;\r\n  width: 100%;\r\n  padding: 10px;\r\n  color: #e0e0e0;\r\n  margin-bottom: 15px;\r\n  min-width: 300px;\r\n  overflow-x: auto;\r\n\r\n  .poic-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .poic-copy {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .poic-body {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { ReactElement, useContext } from \"react\";\r\n\r\nimport { PageOutputInternalContainer, PageOutputInternalWrapperInterface } from \"./styles\";\r\nimport { GlobalContext } from \"globalContext\";\r\n\r\nconst PageOutputInternalWrapper: React.FC<PageOutputInternalWrapperInterface> = ({name, text, children}): ReactElement => {\r\n  const {copyHtmlToClipboard} = useContext(GlobalContext);\r\n  return (\r\n    <PageOutputInternalContainer>\r\n      <div className=\"poic-header\">\r\n        <span className=\"poic-name\">{name}</span>\r\n        <span className=\"poic-copy\" onClick={copyHtmlToClipboard}>{text}</span>\r\n      </div>\r\n      <div className=\"poic-body\">{children}</div>\r\n    </PageOutputInternalContainer>\r\n  );\r\n};\r\n\r\nexport default PageOutputInternalWrapper;\r\n","import styled from 'styled-components';\r\nimport { LayoutItemsList } from 'interfaces';\r\n\r\nexport interface PageOutputHTMLInterface {\r\n  items: LayoutItemsList[];\r\n}\r\n\r\nexport const PageOutputHTMLWrapper = styled.div<{ childrens: LayoutItemsList[]; classList?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  color: #ddd;\r\n  flex-wrap: ${props => props.childrens.length > 0 && 'wrap'};\r\n  min-width: ${props => 200 + props!.classList!.length * 3}px;\r\n\r\n  .inner-with-child {\r\n    padding-left: ${props => props.childrens.length > 0 && '15px'};\r\n  }\r\n\r\n  .por-tag {\r\n    color: #4680b3;\r\n  }\r\n  .por-attr {\r\n    color: #9cdcfe;\r\n  }\r\n  .por-class-names {\r\n    color: #d7ba7d;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n","import React, { Fragment, ReactElement } from \"react\";\r\nimport { LayoutItemsList } from \"interfaces\";\r\n\r\nimport { PageOutputHTMLInterface, PageOutputHTMLWrapper } from \"./styles\";\r\n\r\nconst PageOutputHTML: React.FC<PageOutputHTMLInterface> = ({items}): ReactElement => {\r\n  return (\r\n    <Fragment>\r\n      {items.map((item: LayoutItemsList): JSX.Element => {\r\n        const itemRow = (\r\n          <Fragment>\r\n            <span>\r\n              <span>&nbsp;</span>\r\n              <span className=\"por-attr\">class</span>\r\n              <span>{`=\"`}</span>\r\n              <span className=\"por-class-names\">{item.classList}</span>\r\n              <span>\"</span>\r\n            </span>\r\n          </Fragment>\r\n        );\r\n        return (\r\n          <PageOutputHTMLWrapper\r\n            key={item.id}\r\n            childrens={item.childrens}\r\n            className={item.childrens && \"inner-with-child\"}\r\n            classList={item.classList}\r\n          >\r\n            <span>{\"<\"}</span>\r\n            <span className=\"por-tag\">{item.tagName}</span>\r\n            {item.classList && itemRow}\r\n            <span>{\">\"}</span>\r\n            {item.childrens && item.childrens.length > 0 && <PageOutputHTML items={item.childrens}/>}\r\n            <span>{\"</\"}</span>\r\n            <span className=\"por-tag\">{item.tagName}</span>\r\n            <span>{\">\"}</span>\r\n          </PageOutputHTMLWrapper>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PageOutputHTML;\r\n","import styled from 'styled-components';\r\nimport { LayoutItemsList } from 'interfaces';\r\n\r\nexport interface PageOutputCSSInterface {\r\n  items: LayoutItemsList[];\r\n}\r\n\r\nexport const PageOutputCSSWrapper = styled.div`\r\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  color: #ddd;\r\n`;\r\n\r\nexport const ClassNameRow = styled.div`\r\n  color: #d7ba7d;\r\n  white-space: nowrap;\r\n\r\n  .style-rows-container {\r\n    padding: 3px 0;\r\n  }\r\n  \r\n  &:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const StylePropertyRow = styled.div`\r\n  width: 100%;\r\n  padding-left: 10px;\r\n  color: #ddd;\r\n\r\n  .property {\r\n    color: #9cdcfe;\r\n  }\r\n\r\n  .value {\r\n    color: #ce9178;\r\n  }\r\n`;\r\n","import React, { Fragment, ReactElement } from \"react\";\r\nimport { LayoutItemsList } from \"interfaces\";\r\n\r\nimport { ClassNameRow, PageOutputCSSInterface, PageOutputCSSWrapper, StylePropertyRow } from \"./styles\";\r\nimport { generateRandomId } from \"globalContext\";\r\n\r\nconst PageOutputHTML: React.FC<PageOutputCSSInterface> = ({items}): ReactElement => {\r\n  return (\r\n    <PageOutputCSSWrapper>\r\n      <Fragment>\r\n        {items.map((item: LayoutItemsList) => {\r\n          const classNames: (false | JSX.Element)[] = item.classList.split(\" \").map((className: string) => {\r\n            return className !== \"\" && <span key={item.id + className}>.{className}</span>;\r\n          });\r\n          return (\r\n            <Fragment key={item.id}>\r\n              {item.classList.length > 0 && (\r\n                <ClassNameRow>\r\n                  <div>\r\n                    {classNames} {` {`}\r\n                  </div>\r\n\r\n                  {item.styles && item.styles.length > 0 && (\r\n                    <div className=\"style-rows-container\">\r\n                      {item.styles.map((style: { property: string, value: string | number }) => {\r\n                        return (\r\n                          style.property.length > 0 && (\r\n                            <StylePropertyRow key={`${generateRandomId()}${style.property}${style.value}`}>\r\n                              <span className=\"property\">{style.property}</span>\r\n                              {`: `}\r\n                              <span className=\"value\">{style.value}</span>\r\n                              {`;`}\r\n                            </StylePropertyRow>)\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {item.classList.length > 0 && `}`}\r\n                </ClassNameRow>\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n        {items.map((item: LayoutItemsList): JSX.Element => {\r\n          return (\r\n            <Fragment key={item.id}>\r\n              {item.childrens && item.childrens.length > 0 && <PageOutputHTML items={item.childrens}/>}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </Fragment>\r\n    </PageOutputCSSWrapper>\r\n  );\r\n};\r\n\r\nexport default PageOutputHTML;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageOutputScrollContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgb(29, 29, 29);\r\n  padding: 15px;\r\n  overflow: auto;\r\n  color: #fff;\r\n`;\r\n","import React, { ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport PageOutputInternalContainer from \"components/pageOutputInternalContainer\";\r\nimport { GlobalContext } from \"globalContext\";\r\nimport PageOutputHTML from \"components/PageOutputHTML\";\r\nimport PageOutputCSS from \"components/pageOutputCSS\";\r\n\r\nimport { PageOutputScrollContainer } from \"./styles\";\r\n\r\nconst PageOutputContainer: React.FC = (): ReactElement => {\r\n  const {layoutItemsList, copyTextState} = useContext(GlobalContext);\r\n  const [ textState, setTextState ] = useState(copyTextState);\r\n\r\n  useEffect(() => {\r\n    setTextState(copyTextState);\r\n  }, [copyTextState])\r\n  return (\r\n    <PageOutputScrollContainer>\r\n      <div>\r\n        <PageOutputInternalContainer name=\"HTML\" text={textState.html}>\r\n          <PageOutputHTML items={layoutItemsList}/>\r\n        </PageOutputInternalContainer>\r\n        <PageOutputInternalContainer name=\"CSS\" text={textState.css}>\r\n          <PageOutputCSS items={layoutItemsList}/>\r\n        </PageOutputInternalContainer>\r\n      </div>\r\n    </PageOutputScrollContainer>\r\n  );\r\n};\r\n\r\nexport default PageOutputContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageMainWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 100%;\r\n  min-height: 100vh;\r\n  max-height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  overflow: hidden;\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PageMainWrapper } from './styles';\r\n\r\nconst PageMainContainer: React.FC = ({ children }): ReactElement => {\r\n  return <PageMainWrapper>{children}</PageMainWrapper>;\r\n};\r\n\r\nexport default PageMainContainer;\r\n","import React, { Fragment, ReactElement, useContext } from \"react\";\r\nimport GlobalStyle from \"globalStyles\";\r\n\r\nimport { GlobalContext } from \"globalContext\";\r\nimport Modal from \"components/modal\";\r\nimport PageInputContainer from \"containers/pageInput\";\r\nimport MainViewContainer from \"containers/mainView\";\r\nimport PageOutputContainer from \"containers/pageOutput\";\r\nimport { Container, Section, Bar } from \"react-simple-resizer\";\r\nimport PageMainContainer from \"components/pageMainContainer\";\r\n\r\nimport \"normalize.css\";\r\nimport \"Grid.scss\";\r\n\r\nconst App: React.FC = (): ReactElement  => {\r\n  const {isLoading} = useContext(GlobalContext);\r\n\r\n  if (isLoading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <GlobalStyle/>\r\n      <PageMainContainer>\r\n        <Container style={{width: 100 + \"%\", height: \"100vh\"}}>\r\n          <Section defaultSize={384} minSize={250}>\r\n            <PageInputContainer/>\r\n          </Section>\r\n          <Bar size={5} style={{background: \"#1e1e1e\", cursor: \"e-resize\"}}/>\r\n          <Section minSize={100}>\r\n            <MainViewContainer/>\r\n          </Section>\r\n          <Bar size={5} style={{background: \"#1e1e1e\", cursor: \"e-resize\"}}/>\r\n          <Section defaultSize={384} minSize={320}>\r\n            <PageOutputContainer/>\r\n          </Section>\r\n        </Container>\r\n      </PageMainContainer>\r\n      <Modal />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GlobalProvider } from 'globalContext';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <GlobalProvider>\r\n    <App />\r\n  </GlobalProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}