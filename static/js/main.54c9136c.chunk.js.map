{"version":3,"sources":["helpers/colors.ts","helpers/clipboard.ts","helpers/globalConstants.ts","helpers/classNamesMap.ts","globalContext/index.tsx","globalStyles.ts","components/modalInputRow/index.tsx","components/modal/styles.ts","components/modal/index.tsx","components/overflowHiddenContainer/styles.tsx","components/overflowHiddenContainer/index.tsx","components/itemsList/styles.ts","components/scrollableContainer/styles.ts","components/scrollableContainer/index.tsx","components/itemsList/index.tsx","components/overflowContainer/styles.tsx","components/overflowContainer/index.tsx","components/pageFlexContainer/styles.ts","components/pageFlexContainer/index.tsx","containers/pageInput/styles.ts","containers/pageInput/index.tsx","components/mainViewItemsList/styles.tsx","components/mainViewItemsList/index.tsx","containers/mainView/styles.ts","containers/mainView/index.tsx","components/pageOutputInternalContainer/styles.ts","components/pageOutputInternalContainer/index.tsx","components/PageOutputHTML/styles.ts","components/PageOutputHTML/index.tsx","components/pageOutputCSS/styles.ts","components/pageOutputCSS/index.tsx","containers/pageOutput/styles.ts","containers/pageOutput/index.tsx","components/pageMainContainer/styles.ts","components/pageMainContainer/index.tsx","App.tsx","index.tsx"],"names":["bgColors","assignColor","arrLength","testArray","keys","map","v","resultArray","i","length","push","openTag","item","tagName","classList","closeTag","cssOpenProp","clipboardHTMLItem","childrens","defaultObj","id","open","middle","close","nestedLevel","result","reformatString","defaultString","spaceBeforeTag","Array","fill","join","res","el","resultString","defaultLayoutObject","bgColor","defaultStyleObject","property","value","defaultModalContent","className","styles","classNames","joinBy","trim","split","classNamesMap","nestedResult","defaultState","isLoading","modalContent","isModalOpen","copyTextState","html","css","layoutItemsList","uniqueClassList","handleContainerAddition","handleItemAddition","handleItemStyleAddition","handleInputChange","handleModalOpen","handleModalClose","handleStylePropertyChange","checkIfStylesHaveEmptyField","copyHtmlToClipboard","copyCssToClipboard","generateRandomId","randomString","String","fromCharCode","Math","floor","random","Date","now","GlobalContext","React","createContext","reactiveStateProxy","component","Proxy","set","obj","prop","setState","context","GlobalProvider","props","state","classListCssMap","string","previousState","tempResult","Set","add","findInd","findIndex","transformResult","newLayoutItem","modifyLayoutItemsState","stateCopy","newItem","elem","copyWithForceUpdate","array","copy","joinReformattedArray","then","forceUpdate","window","setTimeout","clipboardCSSItem","slicedArray","index","slice","filter","style","field","getCurrentUniqueClass","modifyUniqueClassState","elementIndex","removeElement","splice","resetStateToDefault","arr","reduce","previousArray","callback","JSON","parse","stringify","getCurrentItem","itemId","callbackWithStateCopy","this","Provider","children","Component","GlobalStyle","createGlobalStyle","ModalInputRow","styleProps","useContext","useState","defaultStyles","styleProperty","setStyleProp","styleValue","setStyleValue","inputChanged","setInputChanged","setStylePropChanged","setStyleValueChanged","useEffect","getElementIndex","s","objectToSubmit","inputHaveChanged","newValue","type","onChange","e","target","onClick","disabled","ModalWrapper","styled","div","modalState","ModalBackground","ModalContent","ModalContentHeader","ModalContentBody","ModalContentBodyTitle","CloseButton","ModalContentStylesList","ModalContentBodyRow","ModalContentBodyStyleAddition","Modal","OverflowHiddenWrapper","OverflowHiddenContainer","LayoutItemsContainer","bg","ItemListContainer","nested","ItemInfo","InputWrapper","Input","input","Button","button","ScrollableWrapper","maxWidth","display","offset","Scrollable","ItemsList","items","itemToAdd","renderItemsList","placeholder","OverflowWrapperContainer","padding","background","OverflowContainer","PageFlexContainerWrapper","PageFlexContainer","HeaderWrapper","ButtonContainerAddition","PageInputContainer","MainViewItemContainer","MainViewItemHeaderContainer","MainViewItemMainContainer","MainViewItemsList","MainViewScrollWrapper","MainViewContainer","PageOutputInternalContainer","ScrollContainer","ScrollInner","PageOutputInternalWrapper","name","text","clickAction","PageOutputHTMLWrapper","PageOutputHTML","itemRow","PageOutputCSSWrapper","ClassNameRow","StylePropertyRow","PageOutputCSS","cls","PageOutputScrollContainer","PageOutputContainer","textState","setTextState","PageMainWrapper","PageMainContainer","App","width","height","defaultSize","minSize","size","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54c9136c.chunk.js","sourcesContent":["export const bgColors: string[] = [\r\n  '#304ffe',\r\n  '#2962ff',\r\n  '#0091ea',\r\n  '#00b8d4',\r\n  '#00bfa5',\r\n  '#00c853',\r\n  '#64dd17',\r\n  '#aeea00',\r\n  '#ffd600',\r\n  '#ffab00',\r\n  '#ff6d00',\r\n  '#dd2c00',\r\n];\r\n\r\nexport const assignColor = (arrLength: number): string => {\r\n  const testArray: number[] = [...bgColors.keys()].map(v => v + 1);\r\n  let resultArray: number[] = [];\r\n  for (let i = 0; i <= arrLength; i++) {\r\n    if (resultArray.length >= bgColors.length) {\r\n      resultArray = [];\r\n    }\r\n    resultArray.push(testArray[i % testArray.length]);\r\n  }\r\n  return bgColors[resultArray.length - 1];\r\n};\r\n","import { defaultObjInterface, LayoutItemsList } from \"interfaces\";\r\n\r\nexport const openTag = (item: LayoutItemsList): string => `<${item.tagName}${item.classList.length > 0 ? ` class=\"${item.classList}\"` : \"\"}>`;\r\nexport const closeTag = (item: LayoutItemsList): string => `</${item.tagName}>`;\r\nexport const cssOpenProp = (item: LayoutItemsList): string => `.${item} {`\r\n\r\nexport const clipboardHTMLItem = (item: LayoutItemsList, childrens: LayoutItemsList[] = []): defaultObjInterface => {\r\n  const defaultObj: defaultObjInterface = {\r\n    id: item.id,\r\n    open: openTag(item),\r\n    middle: childrens,\r\n    close: closeTag(item),\r\n    nestedLevel: item.nestedLevel,\r\n  };\r\n  if (childrens.length > 0) {\r\n    const result: defaultObjInterface[] = [];\r\n    childrens.map((item: any) => {\r\n      return result.push(clipboardHTMLItem(item, item.childrens));\r\n    });\r\n    return {...defaultObj, middle: [...result]};\r\n  }\r\n  return defaultObj;\r\n};\r\n\r\nexport const clipboardCSSItem = (item: any): any => {\r\n  const defaultObj: any = {\r\n    open: cssOpenProp(item.className),\r\n    props: [],\r\n    close: '}'\r\n  };\r\n  item.styles.map((styles: any) => {\r\n    const propsAreNotEmpty = styles.property !== '' || styles.value !== '';\r\n    propsAreNotEmpty && defaultObj.props.push(`  ${styles.property}: ${styles.value};\\n`);\r\n    return true;\r\n  })\r\n  return `${defaultObj.open}\\n${defaultObj.props.join('')}${defaultObj.close}\\n\\n`;\r\n};\r\n\r\nexport const reformatString = ((item: defaultObjInterface, middle: defaultObjInterface[] | LayoutItemsList[] = []): string => {\r\n  const defaultString: string = `${item.open}${item.close}\\n`;\r\n  const spaceBeforeTag: (nestedLevel: number) => string = (nestedLevel: number) => Array(nestedLevel * 2).fill('\\xa0').join('');\r\n\r\n  if (middle.length > 0) {\r\n    let nestedLevel = 0;\r\n    const res: string[] = [];\r\n    item.middle.map((el: any) => {\r\n      nestedLevel = el.nestedLevel;\r\n      return res.push(reformatString(el, el.middle));\r\n    });\r\n\r\n    const resultString = res.map((el) => {\r\n      if (nestedLevel > 0) {\r\n        return spaceBeforeTag(nestedLevel) + el;\r\n      }\r\n      return el;\r\n    });\r\n\r\n    if (item.nestedLevel > 0) {\r\n      return `${item.open}\\n${resultString.join(\"\")}${spaceBeforeTag(item.nestedLevel)}${item.close}\\n`;\r\n    }\r\n    return `${item.open}\\n${resultString.join(\"\")}${item.close}\\n`;\r\n  }\r\n\r\n  return defaultString;\r\n});\r\n\r\nexport const joinReformattedArray = (array: string[]) => {\r\n  return array.join('');\r\n};\r\n","import { defaultStyleObjectInterface, LayoutItemsList, uniqueClassListInterface } from \"interfaces\";\r\n\r\nexport const defaultLayoutObject: LayoutItemsList = {\r\n  id: \"\",\r\n  tagName: \"div\",\r\n  classList: \"\",\r\n  nestedLevel: 0,\r\n  bgColor: \"\",\r\n  childrens: [],\r\n};\r\n\r\nexport const defaultStyleObject: defaultStyleObjectInterface = {\r\n  property: \"\",\r\n  value: \"\"\r\n}\r\n\r\nexport const defaultModalContent: uniqueClassListInterface = {\r\n  className: \"\",\r\n  styles: [defaultStyleObject]\r\n};\r\n\r\n","import { LayoutItemsList, uniqueClassListInterface } from \"interfaces\";\r\nimport { defaultStyleObject } from \"./globalConstants\";\r\n\r\nexport const classNames = (item: LayoutItemsList, joinBy: string = \"\"): string | string[] => {\r\n  const result: string[] = [];\r\n\r\n  item.classList.trim().split(\" \").map((className: string) => {\r\n    return className !== \"\" && result.push(className);\r\n  });\r\n\r\n  return result.join(joinBy);\r\n};\r\n\r\nexport const classNamesMap = (item: LayoutItemsList, childrens: LayoutItemsList[] = []): string => {\r\n  let result: string = \"\";\r\n  item.classList.trim().split(\" \").map((className: string) => {\r\n    if (className !== \"\") {\r\n      return result += ` ${className}`;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  if (childrens && childrens.length > 0) {\r\n    let nestedResult: any = \"\";\r\n    childrens.map((item: any) => {\r\n      return nestedResult += ` ${classNamesMap(item, item.childrens)}`;\r\n    });\r\n    return `${result} ${nestedResult}`;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const transformResult = (string: string, previousState: any): uniqueClassListInterface[] => {\r\n  const tempResult = new Set<string>();\r\n  string.split(\" \").map((className: string) => {\r\n    return className !== \"\" && tempResult.add(className);\r\n  });\r\n  const result: uniqueClassListInterface[] = [];\r\n  [...tempResult].map((el: string) => {\r\n    const findInd = previousState.findIndex((i: uniqueClassListInterface) => i.className === el);\r\n    return result.push({\r\n      className: el,\r\n      styles: findInd !== -1 ? previousState[findInd].styles : [defaultStyleObject]\r\n    });\r\n\r\n  });\r\n  return result;\r\n};\r\n","/* eslint-disable react/no-direct-mutation-state */\r\nimport React from \"react\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nimport {\r\n  value,\r\n  defaultObjInterface,\r\n  defaultStyleObjectInterface,\r\n  LayoutItemsList,\r\n  uniqueClassListInterface\r\n} from \"interfaces\";\r\nimport { assignColor } from \"helpers/colors\";\r\nimport { clipboardCSSItem, clipboardHTMLItem, joinReformattedArray, reformatString } from \"helpers/clipboard\";\r\nimport { classNamesMap, transformResult } from \"helpers/classNamesMap\";\r\nimport { defaultLayoutObject, defaultModalContent, defaultStyleObject } from \"helpers/globalConstants\";\r\n\r\n\r\n\r\n\r\n\r\nconst defaultState = {\r\n  isLoading: false,\r\n  modalContent: defaultModalContent,\r\n  isModalOpen: false,\r\n  copyTextState: {\r\n    html: \"Copy\",\r\n    css: \"Copy\",\r\n  },\r\n  layoutItemsList: [defaultLayoutObject],\r\n  uniqueClassList: [\r\n    {\r\n      className: \"container\",\r\n      styles: [\r\n        {property: \"width\", value: 100 + \"%\"},\r\n        {property: \"border\", value: \"2px solid red\"}\r\n      ]\r\n    }\r\n  ],\r\n  handleContainerAddition: () => {\r\n  },\r\n  handleItemAddition: () => {\r\n  },\r\n  handleItemStyleAddition: () => {\r\n  },\r\n  handleInputChange: () => {\r\n  },\r\n  handleModalOpen: () => {\r\n  },\r\n  handleModalClose: () => {\r\n  },\r\n  handleStylePropertyChange: () => {\r\n  },\r\n  checkIfStylesHaveEmptyField: () => true,\r\n  copyHtmlToClipboard: () => {\r\n  },\r\n  copyCssToClipboard: () => {\r\n  }\r\n};\r\n\r\nexport const generateRandomId = (): string => {\r\n  const randomString = () => String.fromCharCode(65 + Math.floor(Math.random() * 26));\r\n  return randomString() + Date.now() + randomString();\r\n};\r\n\r\nconst GlobalContext = React.createContext<value>(defaultState);\r\n\r\nconst reactiveStateProxy = (component: any) =>\r\n  new Proxy(defaultState, {\r\n    set(obj: any, prop: any, value) {\r\n      obj[prop] = value;\r\n      component.setState({context: reactiveStateProxy(component)});\r\n      return true;\r\n    },\r\n  });\r\n\r\nclass GlobalProvider extends React.Component {\r\n  state = {\r\n    context: reactiveStateProxy(this),\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetStateToDefault();\r\n    this.state.context.layoutItemsList = [\r\n      {\r\n        id: generateRandomId(),\r\n        tagName: \"div\",\r\n        classList: \"container\",\r\n        bgColor: assignColor(0),\r\n        nestedLevel: 0,\r\n        childrens: [],\r\n      },\r\n    ];\r\n  };\r\n\r\n  private classListCssMap = () => {\r\n    let result: string = \"\";\r\n    this.state.context.layoutItemsList.map((item: LayoutItemsList) => {\r\n      if (item.childrens && item.childrens.length > 0) {\r\n        return result += ` ${classNamesMap(item, item.childrens)}`;\r\n      }\r\n      return result += ` ${classNamesMap(item)}`;\r\n    });\r\n    this.state.context.uniqueClassList = transformResult(result, this.state.context.uniqueClassList);\r\n  };\r\n\r\n  public handleContainerAddition = (): void => {\r\n    const newLayoutItem = {...defaultLayoutObject, id: generateRandomId()};\r\n    newLayoutItem.bgColor = assignColor(this.state.context.layoutItemsList.length);\r\n    this.modifyLayoutItemsState(\r\n      newLayoutItem,\r\n      (stateCopy: LayoutItemsList[]) => {\r\n        stateCopy.push(newLayoutItem);\r\n      },\r\n      true\r\n    );\r\n    this.classListCssMap();\r\n  };\r\n\r\n  public handleItemAddition = (item: LayoutItemsList, newItem: LayoutItemsList): void => {\r\n    this.modifyLayoutItemsState(item, (elem: LayoutItemsList) => {\r\n      elem?.childrens.push(newItem);\r\n    });\r\n    this.classListCssMap();\r\n  };\r\n\r\n  private copyWithForceUpdate = (array: string[], property: string): void => {\r\n    copy(joinReformattedArray(array)).then(() => {\r\n      this.state.context.copyTextState[property] = \"Copied!\";\r\n      this.forceUpdate();\r\n      window.setTimeout(() => {\r\n        this.state.context.copyTextState[property] = \"Copy!\";\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  public copyHtmlToClipboard = (): void => {\r\n    const resultArray: defaultObjInterface[] = [];\r\n    this.state.context.layoutItemsList.map((item: LayoutItemsList) => {\r\n      if (item.childrens && item.childrens.length > 0) {\r\n        return resultArray.push(clipboardHTMLItem(item, item.childrens));\r\n      }\r\n      return resultArray.push(clipboardHTMLItem(item));\r\n    });\r\n\r\n    const resultString = resultArray.map((item: defaultObjInterface): string => {\r\n      if (item.middle.length > 0) {\r\n        return reformatString(item, item.middle);\r\n      }\r\n      return reformatString(item);\r\n    });\r\n\r\n    this.copyWithForceUpdate(resultString, \"html\");\r\n  };\r\n\r\n  public copyCssToClipboard = (): void => {\r\n    const resultArray: string[] = [];\r\n    this.state.context.uniqueClassList.map((item: LayoutItemsList) => {\r\n      return resultArray.push(clipboardCSSItem(item));\r\n    });\r\n    const slicedArray = resultArray.map((el: any, index: number) => {\r\n      if(index === resultArray.length - 1) {\r\n        return el.slice(0, -2);\r\n      }\r\n      return el\r\n    });\r\n    this.copyWithForceUpdate(slicedArray, \"css\");\r\n  };\r\n\r\n\r\n  public checkIfStylesHaveEmptyField = (): boolean => {\r\n    if (this.state.context.modalContent.styles) {\r\n      return this.state.context.modalContent.styles.filter((style: defaultStyleObjectInterface) => {\r\n        return style.property.length === 0 && (typeof style.value !== \"number\" ? style.value.length === 0 : style.value > 0);\r\n      }).length > 0;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  public handleInputChange = (item: LayoutItemsList, field: string, value: string): void => {\r\n    this.modifyLayoutItemsState(item, (elem: any) => {\r\n      elem[field] = value;\r\n    });\r\n\r\n    if (field === \"classList\") {\r\n      this.classListCssMap();\r\n    }\r\n  };\r\n\r\n  public handleModalOpen = (item: uniqueClassListInterface): void => {\r\n    if (!this.state.context.isModalOpen) {\r\n      this.state.context.isModalOpen = true;\r\n    }\r\n    this.state.context.modalContent = this.getCurrentUniqueClass(this.state.context.uniqueClassList, item.className);\r\n  };\r\n\r\n  public handleModalClose = (): void => {\r\n    this.state.context.isModalOpen = false;\r\n    this.state.context.modalContent = defaultModalContent;\r\n  };\r\n\r\n  public handleItemStyleAddition = (item: uniqueClassListInterface): void => {\r\n\r\n\r\n    this.modifyUniqueClassState(item, (elem: any) => {\r\n      this.state.context.modalContent.styles.push(defaultStyleObject);\r\n      elem.styles.push(defaultStyleObject);\r\n    });\r\n  };\r\n\r\n  public handleStylePropertyChange = (item: uniqueClassListInterface, elementIndex: number, removeElement: boolean = false, style?: defaultStyleObjectInterface) => {\r\n    this.modifyUniqueClassState(item, (elem: any) => {\r\n      if (!removeElement) {\r\n        this.state.context.modalContent.styles[elementIndex] = {...style};\r\n        elem.styles[elementIndex] = {...style};\r\n      } else {\r\n        this.state.context.modalContent.styles.splice(elementIndex, 1);\r\n        elem.styles.splice(elementIndex, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  private resetStateToDefault = () => {\r\n    this.state.context.isLoading = false;\r\n    this.state.context.isModalOpen = false;\r\n    this.state.context.modalContent = {};\r\n  };\r\n\r\n  private getCurrentUniqueClass = (arr: uniqueClassListInterface[], className: string) => {\r\n    return arr.reduce((previousArray: uniqueClassListInterface | null, item: uniqueClassListInterface): uniqueClassListInterface | null => {\r\n      if (previousArray) {\r\n        return previousArray;\r\n      }\r\n      if (item.className === className) {\r\n        return item;\r\n      }\r\n      return null;\r\n    }, null);\r\n  };\r\n\r\n  private modifyUniqueClassState = (item: uniqueClassListInterface, callback: Function): void => {\r\n    const stateCopy = JSON.parse(JSON.stringify(this.state.context.uniqueClassList));\r\n    const elem: uniqueClassListInterface | null = this.getCurrentUniqueClass(stateCopy, item.className);\r\n    callback(elem);\r\n    this.state.context.uniqueClassList = stateCopy;\r\n  };\r\n\r\n  private getCurrentItem = (arr: LayoutItemsList[], itemId: string): LayoutItemsList | null => {\r\n    return arr.reduce((previousArray: LayoutItemsList | null, item: LayoutItemsList): LayoutItemsList | null => {\r\n      if (previousArray) {\r\n        return previousArray;\r\n      }\r\n      if (item.id === itemId) {\r\n        return item;\r\n      }\r\n      if (item[\"childrens\"]) {\r\n        return this.getCurrentItem(item[\"childrens\"], itemId);\r\n      }\r\n      return null;\r\n    }, null);\r\n  };\r\n\r\n  private modifyLayoutItemsState = (item: LayoutItemsList, callback: Function, callbackWithStateCopy = false): void => {\r\n    const stateCopy = JSON.parse(JSON.stringify(this.state.context.layoutItemsList));\r\n    const elem: LayoutItemsList | null = this.getCurrentItem(stateCopy, item.id);\r\n    if (callbackWithStateCopy) {\r\n      callback(stateCopy);\r\n    } else {\r\n      callback(elem);\r\n    }\r\n    this.state.context.layoutItemsList = stateCopy;\r\n  };\r\n\r\n  public render() {\r\n    const {isLoading, layoutItemsList, isModalOpen, modalContent, copyTextState, uniqueClassList} = this.state.context;\r\n    const value: value = {\r\n      isLoading,\r\n      isModalOpen,\r\n      layoutItemsList,\r\n      modalContent,\r\n      copyTextState,\r\n      uniqueClassList,\r\n      handleModalOpen: this.handleModalOpen,\r\n      handleModalClose: this.handleModalClose,\r\n      handleItemAddition: this.handleItemAddition,\r\n      handleInputChange: this.handleInputChange,\r\n      handleContainerAddition: this.handleContainerAddition,\r\n      handleStylePropertyChange: this.handleStylePropertyChange,\r\n      handleItemStyleAddition: this.handleItemStyleAddition,\r\n      checkIfStylesHaveEmptyField: this.checkIfStylesHaveEmptyField,\r\n      copyHtmlToClipboard: this.copyHtmlToClipboard,\r\n      copyCssToClipboard: this.copyCssToClipboard,\r\n    };\r\n    return <GlobalContext.Provider value={value}>{this.props.children}</GlobalContext.Provider>;\r\n  }\r\n}\r\n\r\nexport { GlobalContext, GlobalProvider };\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    outline: none !important;\r\n  }\r\n  \r\n  *:not(input) {\r\n    caret-color: transparent;\r\n  }\r\n\r\n  input:-internal-autofill-selected {\r\n    background-color: #fff !important;\r\n  }\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    color: #fff;\r\n    \r\n    &[type=\"text\"] {\r\n      caret-color: auto;\r\n    }\r\n  }\r\n\r\n  .flex-wrapper {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n\r\n  .main-class-list {\r\n    margin-left: 15px;\r\n    padding-left: 15px;\r\n    border-left: 1px solid #fff;\r\n    display: flex;\r\n  }\r\n  \r\n  .button {\r\n    background-color: #304ffe;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: #fff;\r\n    padding: 5px 8px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n    transition: background-color 0.2s linear;\r\n    \r\n    &.no-offset {\r\n      margin-left: 0;\r\n    }\r\n    \r\n    &.double-padding {\r\n      padding: 10px 16px;\r\n    }\r\n    \r\n    &.success {\r\n      background-color: #28a745;\r\n    }\r\n\r\n    &.cancel {\r\n      background-color: #304ffe;\r\n    }\r\n    \r\n    &.danger {\r\n      background-color: #dc3545;\r\n    }\r\n    \r\n    &.disabled {\r\n      background-color: #f8f9fa;\r\n      cursor: not-allowed;\r\n      color: #d3d3d3;\r\n    }\r\n  }\r\n  \r\n  .relative {\r\n    position: relative;\r\n  }\r\n  \r\n  .hide-button {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 15px;\r\n    padding: 3px 5px;\r\n    color: #000;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    \r\n    &.right {\r\n      left: unset;\r\n      right: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { Fragment, ReactElement, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { GlobalContext } from \"globalContext\";\r\nimport { defaultStyleObjectInterface } from \"interfaces\";\r\n\r\nconst ModalInputRow: React.FC<{ styleProps: defaultStyleObjectInterface }> = ({styleProps, ...props}): ReactElement => {\r\n  const {modalContent, handleStylePropertyChange} = useContext(GlobalContext);\r\n\r\n  const [defaultStyles] = useState(styleProps);\r\n  const [styleProperty, setStyleProp] = useState<string>(\"\");\r\n  const [styleValue, setStyleValue] = useState<string>(\"\");\r\n  const [inputChanged, setInputChanged] = useState(false);\r\n  const [stylePropChanged, setStylePropChanged] = useState(false);\r\n  const [styleValueChanged, setStyleValueChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setStyleProp(styleProps.property);\r\n    setStyleValue(styleProps.value);\r\n  }, [styleProps]);\r\n\r\n  const getElementIndex = (): number => {\r\n    return modalContent.styles.findIndex((s: any) => s.property === styleProps.property && s.value === styleProps.value);\r\n  };\r\n\r\n  const objectToSubmit = (): defaultStyleObjectInterface => {\r\n    return {\r\n      property: styleProperty.trim(),\r\n      value: styleValue.trim()\r\n    };\r\n  };\r\n\r\n  const saveStyleToGlobalState = (): void => {\r\n    handleStylePropertyChange(modalContent, getElementIndex(), false, objectToSubmit());\r\n    setInputChanged(false);\r\n    setStylePropChanged(false);\r\n    setStyleValueChanged(false);\r\n  };\r\n\r\n  const inputHaveChanged = (property: string, newValue: string) : void => {\r\n    setInputChanged(true);\r\n    if (property === \"property\") {\r\n      setStyleProp(newValue);\r\n      setStylePropChanged(true);\r\n    }\r\n    if (property === \"value\") {\r\n      setStyleValue(newValue);\r\n      setStyleValueChanged(true);\r\n    }\r\n  };\r\n\r\n  const cancelInputChange = (): void => {\r\n    setStyleProp(defaultStyles.property);\r\n    setStyleValue(defaultStyles.value);\r\n    setInputChanged(false);\r\n    setStylePropChanged(false);\r\n    setStyleValueChanged(false);\r\n  };\r\n\r\n  const removeStyle = (): void => {\r\n    return handleStylePropertyChange(modalContent, getElementIndex(), true, objectToSubmit());\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <input type=\"text\" value={styleProperty} onChange={(e) => inputHaveChanged(\"property\", e.target.value)}/>\r\n      <input type=\"text\" value={styleValue} onChange={(e) => inputHaveChanged(\"value\", e.target.value)}/>\r\n      <button className={`button success ${!inputChanged && \"disabled\"}`} onClick={saveStyleToGlobalState}\r\n              disabled={!inputChanged}>Save\r\n      </button>\r\n      <button className={`button ${!inputChanged && \"disabled\"}`} onClick={cancelInputChange}\r\n              disabled={!inputChanged}>Cancel\r\n      </button>\r\n      <button className={`button danger ${inputChanged && \"disabled\"}`} onClick={removeStyle}\r\n              disabled={inputChanged}>Delete\r\n      </button>\r\n    </Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default ModalInputRow;\r\n","import styled from 'styled-components';\r\n\r\nimport { ModalState } from 'interfaces';\r\n\r\nexport const ModalWrapper = styled.div<ModalState>`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 100vw;\r\n  min-height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  display: ${props => props.modalState ? 'block' : 'none'};\r\n`;\r\n\r\nexport const ModalBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  z-index: 1001;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  z-index: 1002;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const ModalContentHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: 15px;\r\n  border-top-left-radius: 15px;\r\n  border-top-right-radius: 15px;\r\n  background-color: #1d1d1d;\r\n  color: #fff;\r\n`;\r\n\r\nexport const ModalContentBody = styled.div`\r\n  border-bottom-left-radius: 15px;\r\n  border-bottom-right-radius: 15px;\r\n  background-color: #fff;\r\n  padding: 15px;\r\n`;\r\n\r\nexport const ModalContentBodyTitle = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin: 0 5px 10px 5px;\r\n  color: #d7ba7d;\r\n  font-size: 16px;\r\n\r\n  & > div:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  div {\r\n    width: 240px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const CloseButton = styled.div`\r\n  margin-left: 10px;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: transparent;\r\n  border: none;\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    width: 18px;\r\n    height: 2px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    background-color: #fff;\r\n    border-radius: 30px;\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    width: 18px;\r\n    height: 2px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    background-color: #fff;\r\n    border-radius: 30px;\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\nexport const ModalContentStylesList = styled.div`\r\n  max-height: 75vh;\r\n  overflow-y: auto;\r\n  padding-right: 15px;\r\n`;\r\n\r\nexport const ModalContentBodyRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  \r\n  input {\r\n    color: #000;\r\n    border: 1px solid #ccc;\r\n    margin: 5px;\r\n    padding: 5px 10px;\r\n    width: 240px;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nexport const ModalContentBodyStyleAddition = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n`;\r\n\r\n","import React, { ReactElement, useContext } from \"react\";\r\n\r\nimport { generateRandomId, GlobalContext } from \"globalContext\";\r\nimport ModalInputRow from \"components/modalInputRow\";\r\nimport { defaultStyleObjectInterface } from \"interfaces\";\r\n\r\nimport {\r\n  CloseButton,\r\n  ModalBackground,\r\n  ModalContent,\r\n  ModalContentBody,\r\n  ModalContentBodyRow,\r\n  ModalContentBodyStyleAddition,\r\n  ModalContentBodyTitle,\r\n  ModalContentHeader,\r\n  ModalContentStylesList,\r\n  ModalWrapper\r\n} from \"./styles\";\r\n\r\nconst Modal: React.FC = (): ReactElement => {\r\n  const {\r\n    isModalOpen,\r\n    modalContent,\r\n    handleItemStyleAddition,\r\n    handleModalClose,\r\n    checkIfStylesHaveEmptyField\r\n  } = useContext(GlobalContext);\r\n\r\n  const addStyleProperty: () => void = (): void => {\r\n    return handleItemStyleAddition(modalContent);\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper modalState={isModalOpen}>\r\n      <ModalBackground onClick={() => handleModalClose()}/>\r\n      <ModalContent>\r\n        <ModalContentHeader>\r\n          <div className=\"flex-wrapper\">\r\n            <div className=\"main-tag-names\">class: {modalContent.className}</div>\r\n          </div>\r\n          <CloseButton onClick={() => handleModalClose()}/>\r\n        </ModalContentHeader>\r\n        <ModalContentBody>\r\n          {modalContent.styles && modalContent.styles.length > 0 &&\r\n            <ModalContentBodyTitle>\r\n              <div>Property name</div>\r\n              <div>Value</div>\r\n            </ModalContentBodyTitle>\r\n          }\r\n          <ModalContentStylesList>\r\n            {modalContent.styles && modalContent.styles.length > 0 && (\r\n              modalContent.styles.map((style: defaultStyleObjectInterface) => {\r\n                return (\r\n                  <ModalContentBodyRow key={`${generateRandomId()}${style.property}${style.value}`}>\r\n                    {modalContent.styles && modalContent.styles.length > 0 && (\r\n                      <ModalInputRow styleProps={style}/>\r\n                    )}\r\n                  </ModalContentBodyRow>\r\n                );\r\n              })\r\n            )}\r\n          </ModalContentStylesList>\r\n          <ModalContentBodyStyleAddition>\r\n            <button\r\n              type=\"button\"\r\n              className={`${checkIfStylesHaveEmptyField() && \"disabled\"} button success double-padding no-offset`}\r\n              onClick={addStyleProperty}\r\n              disabled={checkIfStylesHaveEmptyField()}>Add property\r\n            </button>\r\n          </ModalContentBodyStyleAddition>\r\n        </ModalContentBody>\r\n      </ModalContent>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const OverflowHiddenWrapper = styled.div`\r\n  width: 100%;\r\n  overflow: hidden;\r\n  flex-grow: 1;\r\n  max-height: 100%;\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { OverflowHiddenWrapper } from './styles';\r\n\r\nconst OverflowHiddenContainer: React.FC = (props): ReactElement => {\r\n  return <OverflowHiddenWrapper>{props.children}</OverflowHiddenWrapper>;\r\n};\r\n\r\nexport default OverflowHiddenContainer;\r\n","import styled from 'styled-components';\r\n\r\nimport { ItemListContainerInterface, withBgProps } from 'interfaces';\r\n\r\nexport const LayoutItemsContainer = styled.div<withBgProps>`\r\n  width: 100%;\r\n  color: #fff;\r\n  padding: 15px;\r\n  min-width: 350px;\r\n  border-bottom: 1px dashed ${props => props.bg};\r\n  font-size: 20px;\r\n\r\n  .header-info {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    margin-bottom: 5px;\r\n    padding-left: 15px;\r\n\r\n    input {\r\n      border: none;\r\n      background: none;\r\n      color: #fff;\r\n    }\r\n    .tag-name {\r\n      color: ${props => props.bg};\r\n      margin-right: 15px;\r\n      max-width: 90px;\r\n    }\r\n\r\n    .class-lists {\r\n      color: #d7ba7d;\r\n      flex-grow: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ItemListContainer = styled.div<ItemListContainerInterface>`\r\n  padding-left: ${props => (props.nested === 0 ? 0 : 15)}px;\r\n  width: 100%;\r\n  min-width: 350px;\r\n  position: relative;\r\n`;\r\n\r\nexport const ItemInfo = styled.div`\r\n  border: 2px solid #ccc;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: #fff;\r\n\r\n  .tag-name {\r\n    width: 100px;\r\n    margin-right: 5px;\r\n  }\r\n  .input-classes {\r\n    flex-grow: 1;\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div<withBgProps>`\r\n  position: relative;\r\n  ::before,\r\n  ::after {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    content: '';\r\n    width: 0;\r\n    height: 0;\r\n    background-color: ${props => props.bg};\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  ::before {\r\n    width: 2px;\r\n  }\r\n\r\n  ::after {\r\n    height: 2px;\r\n  }\r\n\r\n  :hover,\r\n  :focus-within {\r\n    ::before {\r\n      height: 100%;\r\n    }\r\n    ::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 28px;\r\n  max-height: 28px;\r\n  border: none;\r\n  border-bottom: 2px solid #ccc;\r\n  padding: 3px 10px;\r\n  font-size: 15px;\r\n  color: #000;\r\n`;\r\n\r\nexport const Button = styled.button<withBgProps>`\r\n  background-color: ${props => props.bg};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  height: 28px;\r\n  max-height: 28px;\r\n  width: 28px;\r\n  max-width: 28px;\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { ScrollableWrapperInterface } from 'interfaces';\r\n\r\nexport const ScrollableWrapper = styled.div<ScrollableWrapperInterface>`\r\n  width: ${props => props.maxWidth || '100%'};\r\n  max-width: ${props => props.maxWidth || '250px'};\r\n  display: ${props => props.display || 'inline-block'};\r\n  margin-left: ${props => props.offset || 0}px;\r\n  white-space: nowrap;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  -webkit-overflow-scrolling: touch;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  \r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { ReactElement } from \"react\";\r\n\r\nimport { ScrollableWrapperInterface } from \"interfaces\";\r\n\r\nimport { ScrollableWrapper } from \"./styles\";\r\n\r\nconst Scrollable: React.FC<ScrollableWrapperInterface> = ({maxWidth, offset, children, ...props}): ReactElement => {\r\n  return (\r\n    <ScrollableWrapper maxWidth={maxWidth} offset={offset} {...props}>\r\n      {children}\r\n    </ScrollableWrapper>\r\n  );\r\n};\r\n\r\nexport default Scrollable;\r\n","import React, { Fragment, ReactElement, useContext } from \"react\";\r\nimport { LayoutItemsList } from \"interfaces\";\r\nimport { generateRandomId, GlobalContext } from \"globalContext\";\r\n\r\nimport { Button, Input, InputWrapper, ItemInfo, ItemListContainer, LayoutItemsContainer } from \"./styles\";\r\nimport Scrollable from \"components/scrollableContainer\";\r\nimport { assignColor } from \"helpers/colors\";\r\n\r\nconst ItemsList: React.FC<{ items: LayoutItemsList[] }> = ({items}): ReactElement => {\r\n  const {handleItemAddition, handleInputChange} = useContext(GlobalContext);\r\n  return (\r\n    <Fragment>\r\n      {items.map((item: LayoutItemsList): JSX.Element => {\r\n        const itemToAdd: LayoutItemsList = {\r\n          id: generateRandomId(),\r\n          tagName: \"div\",\r\n          classList: \"\",\r\n          bgColor: assignColor(item.nestedLevel + 1),\r\n          nestedLevel: item.nestedLevel + 1,\r\n          childrens: [],\r\n        };\r\n\r\n        const renderItemsList: JSX.Element = (\r\n          <ItemListContainer key={item.id} nested={item.nestedLevel}>\r\n            <ItemInfo className=\"item-info\">\r\n              <InputWrapper className=\"tag-name\" bg={item.bgColor}>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Tag name\"\r\n                  value={item.tagName}\r\n                  onChange={e => handleInputChange(item, \"tagName\", e.target.value)}\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper className=\"input-classes\" bg={item.bgColor}>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Class names\"\r\n                  value={item.classList}\r\n                  onChange={e => handleInputChange(item, \"classList\", e.target.value)}\r\n                />\r\n              </InputWrapper>\r\n              <Button type=\"button\" onClick={() => handleItemAddition(item, itemToAdd)} bg={item.bgColor}>\r\n                +\r\n              </Button>\r\n            </ItemInfo>\r\n            {item.childrens && item.childrens.length > 0 && <ItemsList items={item.childrens}/>}\r\n          </ItemListContainer>\r\n        );\r\n\r\n        if (item.nestedLevel === 0) {\r\n          return (\r\n            <LayoutItemsContainer key={item.id} bg={item.bgColor}>\r\n              <div className=\"header-info\">\r\n                <Scrollable className=\"tag-name\">{item.tagName}</Scrollable>\r\n                {item.classList &&\r\n                  <Scrollable className=\"class-lists\" maxWidth={\"initial\"}>{item.classList}</Scrollable>}\r\n              </div>\r\n              {renderItemsList}\r\n            </LayoutItemsContainer>\r\n          );\r\n        }\r\n\r\n        return renderItemsList;\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemsList;\r\n","import styled from 'styled-components';\r\n\r\nimport { OverflowHiddenContainerInterface } from 'interfaces';\r\n\r\nexport const OverflowWrapperContainer = styled.div<OverflowHiddenContainerInterface>`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  overflow: auto;\r\n  flex-grow: 1;\r\n  padding: ${props => props.padding}px;\r\n  background-color: ${props => props.background};\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { OverflowHiddenContainerInterface } from 'interfaces';\r\nimport { OverflowWrapperContainer } from './styles';\r\n\r\nconst OverflowContainer: React.FC<OverflowHiddenContainerInterface> = ({ padding, background, children }): ReactElement => {\r\n  return (\r\n    <OverflowWrapperContainer padding={padding} background={background}>\r\n      {children}\r\n    </OverflowWrapperContainer>\r\n  );\r\n};\r\n\r\nexport default OverflowContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageFlexContainerWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-height: 100%;\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PageFlexContainerWrapper } from './styles';\r\n\r\nconst PageFlexContainer: React.FC = (props): ReactElement => {\r\n  return <PageFlexContainerWrapper>{props.children}</PageFlexContainerWrapper>;\r\n};\r\n\r\nexport default PageFlexContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  background-color: #1d1d1d;\r\n  padding: 40px 15px 25px 15px;\r\n  color: #fff;\r\n  h1 {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainerAddition = styled.div`\r\n  width: 70%;\r\n  padding: 5px;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  border-bottom: 2px solid #cccccc;\r\n  margin: 20px auto;\r\n  cursor: pointer;\r\n`;\r\n","import React, { ReactElement, useContext } from \"react\";\r\nimport OverflowHiddenWrapper from \"components/overflowHiddenContainer\";\r\nimport ItemsList from \"components/itemsList\";\r\nimport { GlobalContext } from \"globalContext\";\r\nimport OverflowWrapper from \"components/overflowContainer\";\r\nimport PageFlexContainer from \"components/pageFlexContainer\";\r\n\r\nimport { ButtonContainerAddition, HeaderWrapper } from \"./styles\";\r\n\r\nconst PageInputContainer: React.FC = (): ReactElement => {\r\n  const {layoutItemsList, handleContainerAddition} = useContext(GlobalContext);\r\n  return (\r\n    <PageFlexContainer>\r\n      <HeaderWrapper>\r\n        <h1>Easy Layout</h1>\r\n      </HeaderWrapper>\r\n\r\n      <OverflowHiddenWrapper>\r\n        <OverflowWrapper background=\"#1e1e1e\">\r\n          <ItemsList items={layoutItemsList}/>\r\n          <ButtonContainerAddition onClick={handleContainerAddition}>Add Container</ButtonContainerAddition>\r\n        </OverflowWrapper>\r\n      </OverflowHiddenWrapper>\r\n    </PageFlexContainer>\r\n  );\r\n};\r\n\r\nexport default PageInputContainer;\r\n","import styled from 'styled-components';\r\nimport { MainViewItemMainContainerInterface } from 'interfaces';\r\n\r\nexport const MainViewItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const MainViewItemHeaderContainer = styled.div<{ bg: string }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 20px;\r\n  padding: 0 10px;\r\n  background-color: ${props => props.bg ? props.bg : '#1e88e5'};\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  color: #fff;\r\n  font-size: 13px;\r\n  \r\n  .settings-icon {\r\n    width: 13px;\r\n    height: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainViewItemMainContainer = styled.div<MainViewItemMainContainerInterface>`\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-top: none;\r\n  flex-grow: 1;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  padding: 15px;\r\n  overflow: hidden;\r\n  ${props => props.childrens.length > 0 && `display: flex;`}\r\n\r\n  div:not(:last-child, .main-tag-names) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","import React, { Fragment, ReactElement } from \"react\";\r\nimport { LayoutItemsList } from \"interfaces\";\r\nimport Scrollable from \"components/scrollableContainer\";\r\n\r\nimport { MainViewItemContainer, MainViewItemHeaderContainer, MainViewItemMainContainer } from \"./styles\";\r\n\r\nconst MainViewItemsList: React.FC<{ items: LayoutItemsList[] }> = ({items}): ReactElement => {\r\n  return (\r\n    <Fragment>\r\n      {items.map((item: LayoutItemsList): JSX.Element => {\r\n        return (\r\n          <MainViewItemContainer key={item.id}>\r\n            <MainViewItemHeaderContainer bg={item.bgColor}>\r\n              <div className=\"flex-wrapper\">\r\n                <div className=\"main-tag-names\">{item.tagName}</div>\r\n                <div className=\"main-class-list\">\r\n                  {item.classList.length > 0 && \"class: \"} {<Scrollable offset={5}>{item.classList}</Scrollable>}\r\n                </div>\r\n              </div>\r\n            </MainViewItemHeaderContainer>\r\n            <MainViewItemMainContainer childrens={item.childrens}>\r\n              {item.childrens && item.childrens.length > 0 && <MainViewItemsList items={item.childrens}/>}\r\n            </MainViewItemMainContainer>\r\n          </MainViewItemContainer>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainViewItemsList;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainViewScrollWrapper = styled.div`\r\n  min-width: 500px;\r\n  padding: 15px;\r\n`;\r\n","import React, { ReactElement, useContext } from \"react\";\r\nimport { GlobalContext } from \"globalContext\";\r\nimport PageFlexContainer from \"components/pageFlexContainer\";\r\nimport OverflowHiddenWrapper from \"components/overflowHiddenContainer\";\r\nimport OverflowWrapper from \"components/overflowContainer\";\r\nimport MainViewItemsList from \"components/mainViewItemsList\";\r\n\r\nimport { MainViewScrollWrapper } from \"./styles\";\r\n\r\nconst MainViewContainer: React.FC = (): ReactElement => {\r\n  const {layoutItemsList} = useContext(GlobalContext);\r\n  return (\r\n    <PageFlexContainer>\r\n      <OverflowHiddenWrapper>\r\n        <OverflowWrapper>\r\n          <MainViewScrollWrapper>\r\n            <MainViewItemsList items={layoutItemsList}/>\r\n          </MainViewScrollWrapper>\r\n        </OverflowWrapper>\r\n      </OverflowHiddenWrapper>\r\n    </PageFlexContainer>\r\n  );\r\n};\r\n\r\nexport default MainViewContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageOutputInternalContainer = styled.div`\r\n  background-color: #151515;\r\n  max-height: 100%;\r\n  width: 100%;\r\n  color: #e0e0e0;\r\n  margin-bottom: 15px;\r\n  min-width: 300px;\r\n  \r\n  .poic-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0 10px;\r\n  }\r\n\r\n  .poic-copy {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .poic-body {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ScrollContainer = styled.div`\r\n  max-height: 100%;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport const ScrollInner = styled.div`\r\n  max-height: 100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 10px;\r\n`;\r\n","import React, { ReactElement } from \"react\";\r\n\r\nimport { PageOutputInternalWrapperInterface } from \"interfaces\";\r\n\r\nimport { PageOutputInternalContainer, ScrollContainer, ScrollInner } from \"./styles\";\r\n\r\nconst PageOutputInternalWrapper: React.FC<PageOutputInternalWrapperInterface> = ({name, text, clickAction, children}): ReactElement => {\r\n  return (\r\n    <PageOutputInternalContainer>\r\n      <div className=\"poic-header\">\r\n        <span className=\"poic-name\">{name}</span>\r\n        <span className=\"poic-copy\" onClick={clickAction}>{text}</span>\r\n      </div>\r\n      <ScrollContainer>\r\n        <ScrollInner>\r\n            <div className=\"poic-body\">{children}</div>\r\n        </ScrollInner>\r\n      </ScrollContainer>\r\n    </PageOutputInternalContainer>\r\n  );\r\n};\r\n\r\nexport default PageOutputInternalWrapper;\r\n","import styled from 'styled-components';\r\nimport { LayoutItemsList } from 'interfaces';\r\n\r\nexport const PageOutputHTMLWrapper = styled.div<{ childrens: LayoutItemsList[]; classList?: string | string[] }>`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  color: #ddd;\r\n  flex-wrap: ${props => props.childrens.length > 0 && 'wrap'};\r\n  min-width: ${props => 200 + props!.classList!.length * 3}px;\r\n\r\n  .inner-with-child {\r\n    padding-left: ${props => props.childrens.length > 0 && '15px'};\r\n  }\r\n\r\n  .por-tag {\r\n    color: #4680b3;\r\n  }\r\n  .por-attr {\r\n    color: #9cdcfe;\r\n  }\r\n  .por-class-names {\r\n    color: #d7ba7d;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n","import React, { Fragment, ReactElement } from \"react\";\r\nimport { LayoutItemsList, PageOutputHTMLInterface } from \"interfaces\";\r\n\r\nimport { PageOutputHTMLWrapper } from \"./styles\";\r\nimport { generateRandomId } from \"globalContext\";\r\nimport { classNames } from \"helpers/classNamesMap\";\r\n\r\nconst PageOutputHTML: React.FC<PageOutputHTMLInterface> = ({items}): ReactElement => {\r\n  return (\r\n    <Fragment>\r\n      {items.map((item: LayoutItemsList): JSX.Element => {\r\n        const itemRow = (\r\n          <Fragment key={generateRandomId () + item.id}>\r\n            <span>\r\n              <span>&nbsp;</span>\r\n              <span className=\"por-attr\">class</span>\r\n              <span>{`=\"`}</span>\r\n              <span className=\"por-class-names\">{classNames(item,' ')}</span>\r\n              <span>\"</span>\r\n            </span>\r\n          </Fragment>\r\n        );\r\n        return (\r\n          <PageOutputHTMLWrapper\r\n            key={generateRandomId() + item.id}\r\n            childrens={item.childrens}\r\n            className={item.childrens && \"inner-with-child\"}\r\n            classList={classNames(item,' ')}\r\n          >\r\n            <span>{\"<\"}</span>\r\n            <span className=\"por-tag\">{item.tagName}</span>\r\n            {item.classList && itemRow}\r\n            <span>{\">\"}</span>\r\n            {item.childrens && item.childrens.length > 0 && <PageOutputHTML items={item.childrens}/>}\r\n            <span>{\"</\"}</span>\r\n            <span className=\"por-tag\">{item.tagName}</span>\r\n            <span>{\">\"}</span>\r\n          </PageOutputHTMLWrapper>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PageOutputHTML;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageOutputCSSWrapper = styled.div`\r\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  color: #ddd;\r\n  \r\n  & > div:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const ClassNameRow = styled.div`\r\n  color: #d7ba7d;\r\n  white-space: nowrap;\r\n  position: relative;\r\n  cursor: pointer;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -2.5px;\r\n    left: -2.5px;\r\n    width: calc(100% + 5px);\r\n    height: calc(100% + 5px);\r\n    transition: background-color .4s linear;\r\n    border-radius: 5px;\r\n    opacity: 0;\r\n  }\r\n\r\n  .style-rows-container {\r\n    padding: 3px 0;\r\n  }\r\n  \r\n  &:hover::before {\r\n    opacity: 0.4;\r\n    background-color: rgb(189, 189, 189);\r\n    cursor: pointer;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nexport const StylePropertyRow = styled.div`\r\n  width: 100%;\r\n  padding-left: 10px;\r\n  color: #ddd;\r\n\r\n  .property {\r\n    color: #9cdcfe;\r\n  }\r\n\r\n  .value {\r\n    color: #ce9178;\r\n  }\r\n`;\r\n","import React, {  ReactElement, useContext } from \"react\";\r\nimport { defaultStyleObjectInterface, uniqueClassListInterface } from \"interfaces\";\r\n\r\nimport { ClassNameRow, PageOutputCSSWrapper, StylePropertyRow } from \"./styles\";\r\nimport { generateRandomId, GlobalContext } from \"globalContext\";\r\n\r\nconst PageOutputCSS: React.FC = (): ReactElement => {\r\n  const { uniqueClassList, handleModalOpen } = useContext(GlobalContext);\r\n  return (\r\n    <PageOutputCSSWrapper>\r\n      {uniqueClassList.map((cls: uniqueClassListInterface) => {\r\n        return (\r\n          <ClassNameRow key={cls.className} onClick={() => handleModalOpen(cls)}>\r\n          {`.${cls.className} {`}\r\n          <br />\r\n          {cls.styles && cls.styles.length > 0 && (\r\n            <div className=\"style-rows-container\">\r\n              {cls.styles.map((style: defaultStyleObjectInterface) => {\r\n                return (\r\n                  style.property.length > 0 && (\r\n                    <StylePropertyRow\r\n                      key={`${generateRandomId()}${style.property}${style.value}`}>\r\n                      <span className=\"property\">{style.property}</span>\r\n                      {`: `}\r\n                      <span className=\"value\">{style.value}</span>\r\n                      {`;`}\r\n                    </StylePropertyRow>)\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n          {'}'}\r\n        </ClassNameRow>\r\n        )\r\n      })}\r\n    </PageOutputCSSWrapper>\r\n  );\r\n};\r\n\r\nexport default PageOutputCSS;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageOutputScrollContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgb(29, 29, 29);\r\n  padding: 15px;\r\n  overflow: auto;\r\n  color: #fff;\r\n`;\r\n","import React, { ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport PageOutputInternalContainer from \"components/pageOutputInternalContainer\";\r\nimport { GlobalContext } from \"globalContext\";\r\nimport PageOutputHTML from \"components/PageOutputHTML\";\r\nimport PageOutputCSS from \"components/pageOutputCSS\";\r\n\r\nimport { PageOutputScrollContainer } from \"./styles\";\r\n\r\nconst PageOutputContainer: React.FC = (): ReactElement => {\r\n  const {layoutItemsList, copyTextState, copyHtmlToClipboard, copyCssToClipboard} = useContext(GlobalContext);\r\n  const [ textState, setTextState ] = useState(copyTextState);\r\n\r\n  useEffect(() => {\r\n    setTextState(copyTextState);\r\n  }, [copyTextState])\r\n  return (\r\n    <PageOutputScrollContainer>\r\n      <div>\r\n        <PageOutputInternalContainer name=\"HTML\" text={textState.html} clickAction={copyHtmlToClipboard}>\r\n          <PageOutputHTML items={layoutItemsList}/>\r\n        </PageOutputInternalContainer>\r\n        <PageOutputInternalContainer name=\"CSS\" text={textState.css} clickAction={copyCssToClipboard}>\r\n          <PageOutputCSS />\r\n        </PageOutputInternalContainer>\r\n      </div>\r\n    </PageOutputScrollContainer>\r\n  );\r\n};\r\n\r\nexport default PageOutputContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageMainWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 100%;\r\n  min-height: 100vh;\r\n  max-height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  overflow: hidden;\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PageMainWrapper } from './styles';\r\n\r\nconst PageMainContainer: React.FC = ({ children }): ReactElement => {\r\n  return <PageMainWrapper>{children}</PageMainWrapper>;\r\n};\r\n\r\nexport default PageMainContainer;\r\n","import React, { Fragment, ReactElement, useContext } from \"react\";\r\nimport GlobalStyle from \"globalStyles\";\r\n\r\nimport { GlobalContext } from \"globalContext\";\r\nimport Modal from \"components/modal\";\r\nimport PageInputContainer from \"containers/pageInput\";\r\nimport MainViewContainer from \"containers/mainView\";\r\nimport PageOutputContainer from \"containers/pageOutput\";\r\nimport { Container, Section, Bar } from \"react-simple-resizer\";\r\nimport PageMainContainer from \"components/pageMainContainer\";\r\n\r\nimport \"normalize.css\";\r\nimport \"Grid.scss\";\r\n\r\nconst App: React.FC = (): ReactElement  => {\r\n  const {isLoading} = useContext(GlobalContext);\r\n\r\n  if (isLoading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <GlobalStyle/>\r\n      <PageMainContainer>\r\n        <Container style={{width: 100 + \"%\", height: \"100vh\"}}>\r\n          <Section defaultSize={384} minSize={250}>\r\n            <PageInputContainer/>\r\n          </Section>\r\n          <Bar size={5} style={{background: \"#1e1e1e\", cursor: \"e-resize\"}}/>\r\n          <Section minSize={100}>\r\n            <MainViewContainer/>\r\n          </Section>\r\n          <Bar size={5} style={{background: \"#1e1e1e\", cursor: \"e-resize\"}}/>\r\n          <Section defaultSize={384} minSize={320}>\r\n            <PageOutputContainer/>\r\n          </Section>\r\n        </Container>\r\n      </PageMainContainer>\r\n      <Modal />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GlobalProvider } from 'globalContext';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <GlobalProvider>\r\n    <App />\r\n  </GlobalProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}